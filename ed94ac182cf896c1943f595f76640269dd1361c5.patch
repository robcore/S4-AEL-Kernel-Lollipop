From ed94ac182cf896c1943f595f76640269dd1361c5 Mon Sep 17 00:00:00 2001
From: Domi Papoi <dpapoi@codeaurora.org>
Date: Tue, 11 Aug 2015 17:31:50 -0400
Subject: [PATCH] msm: video: Checks for code robustness

Check for NULL pointer and array out of bounds

Change-Id: I42fb2b6fb087e6e4a99b2783d2b68499e802541a
Signed-off-by: Domi Papoi <dpapoi@codeaurora.org>
---
 .../msm/vidc/1080p/resource_tracker/vcd_res_tracker.c  |  8 +++++---
 drivers/video/msm/vidc/common/vcd/vcd_sub.c            | 18 +++++++++---------
 2 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c b/drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c
index 0c19399..7dab0b8 100755
--- a/drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c
+++ b/drivers/video/msm/vidc/1080p/resource_tracker/vcd_res_tracker.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010-2013, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2010-2013, 2015, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -696,8 +696,10 @@ u32 res_trk_download_firmware(void)
 		status = false;
 		goto bail_out;
 	}
-	vidc_video_codec_fw = (unsigned char *)fw_video->data;
-	vidc_video_codec_fw_size = (u32) fw_video->size;
+	if (fw_video) {
+		vidc_video_codec_fw = (unsigned char *)fw_video->data;
+		vidc_video_codec_fw_size = (u32) fw_video->size;
+	}
 bail_out:
 	mutex_unlock(&resource_context.lock);
 	return status;
diff --git a/drivers/video/msm/vidc/common/vcd/vcd_sub.c b/drivers/video/msm/vidc/common/vcd/vcd_sub.c
index 6e9d79d..6f67948 100755
--- a/drivers/video/msm/vidc/common/vcd/vcd_sub.c
+++ b/drivers/video/msm/vidc/common/vcd/vcd_sub.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010-2013, Linux Foundation. All rights reserved.
+/* Copyright (c) 2010-2013, 2015, Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1255,15 +1255,15 @@ u32 vcd_check_for_client_context(
 u32 vcd_validate_driver_handle(
 	struct vcd_dev_ctxt *dev_ctxt, s32 driver_handle)
 {
-	driver_handle--;
+	u32 result = false;
+	s32 driver_id = driver_handle - 1;
 
-	if (driver_handle < 0 ||
-		driver_handle >= VCD_DRIVER_CLIENTS_MAX ||
-		!dev_ctxt->driver_ids[driver_handle]) {
-		return false;
-	} else {
-		return true;
-	}
+	if ((0 <= driver_id) &&
+		(VCD_DRIVER_CLIENTS_MAX > driver_id) &&
+		(dev_ctxt->driver_ids[driver_id]))
+		result = true;
+
+	return result;
 }
 
 u32 vcd_client_cmd_en_q(
