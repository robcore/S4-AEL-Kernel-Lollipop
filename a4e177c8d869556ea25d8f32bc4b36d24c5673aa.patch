From a4e177c8d869556ea25d8f32bc4b36d24c5673aa Mon Sep 17 00:00:00 2001
From: andip71 <andreasp@gmx.de>
Date: Tue, 28 Apr 2015 08:10:31 +0200
Subject: [PATCH] block: Fix sticky scheduler also when multiple mmc are
 available (external SD card etc.)

---
 block/blk-core.c       |  1 +
 block/elevator.c       | 12 ++++--------
 include/linux/blkdev.h |  2 ++
 3 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/block/blk-core.c b/block/blk-core.c
index 7afd6cf..fed856b 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -509,6 +509,7 @@ struct request_queue *blk_alloc_queue_node(gfp_t gfp_mask, int node_id)
 	q->backing_dev_info.capabilities = BDI_CAP_MAP_COPY;
 	q->backing_dev_info.name = "block";
 	q->node = node_id;
+	*q->elevator_hard = '\0';
 
 	err = bdi_init(&q->backing_dev_info);
 	if (err)
diff --git a/block/elevator.c b/block/elevator.c
index beee682..4a90895 100644
--- a/block/elevator.c
+++ b/block/elevator.c
@@ -43,8 +43,6 @@
 static DEFINE_SPINLOCK(elv_list_lock);
 static LIST_HEAD(elv_list);
 
-static char elevator_hard[ELV_NAME_MAX];
-
 /*
  * Merge hash stuff.
  */
@@ -230,8 +228,6 @@ int elevator_init(struct request_queue *q, char *name)
 	struct elevator_queue *eq;
 	int err;
 
-	*elevator_hard = '\0';
-	
 	if (unlikely(q->elevator))
 		return 0;
 
@@ -1100,10 +1096,10 @@ ssize_t elv_iosched_store(struct request_queue *q, const char *name,
 	if (!q->elevator)
 		return count;
 
-	if ((strlen(elevator_hard) != 0) && (! strstr(name, elevator_hard)))
+	if ((strlen(q->elevator_hard) != 0) && (! strstr(name, q->elevator_hard)))
 	{
 		sscanf(name, "%s", elevator_name);
-		printk(KERN_ERR "elevator: switch to %s failed due to Boeffla hard value set to %s\n", elevator_name, elevator_hard);
+		printk(KERN_ERR "elevator: switch to %s failed due to Boeffla hard value set to %s\n", elevator_name, q->elevator_hard);
 		return count;
 	}
 
@@ -1144,14 +1140,14 @@ ssize_t elv_iosched_hard_store(struct request_queue *q, const char *name,
 			  size_t count)
 {
 	if (strlen(name) < ELV_NAME_MAX)
-		sscanf(name, "%s", elevator_hard);
+		sscanf(name, "%s", q->elevator_hard);
 
 	return count;
 }
 
 ssize_t elv_iosched_hard_show(struct request_queue *q, char *name)
 {
-	return sprintf(name, "%s\n", elevator_hard);
+	return sprintf(name, "%s\n", q->elevator_hard);
 }
 
 struct request *elv_rb_former_request(struct request_queue *q,
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 651a0fc..0ea3aa9 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -409,6 +409,8 @@ struct request_queue {
 	/* Throttle data */
 	struct throtl_data *td;
 #endif
+
+	char elevator_hard[ELV_NAME_MAX];
 };
 
 #define QUEUE_FLAG_QUEUED	1	/* uses generic tag queueing */
