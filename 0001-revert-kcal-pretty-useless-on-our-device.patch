From 8cb66e1c9334d219b1b418ab5beddde39791f451 Mon Sep 17 00:00:00 2001
From: robcore <robpatershuk@gmail.com>
Date: Tue, 26 Apr 2016 15:07:59 -0600
Subject: [PATCH] revert kcal, pretty useless on our device

---
 arch/arm/configs/AEL_config            |   2 +-
 arch/arm/mach-msm/Kconfig              |  12 -
 arch/arm/mach-msm/Makefile             |   1 -
 arch/arm/mach-msm/board-8064-display.c |  10 -
 arch/arm/mach-msm/board-8960-display.c |  10 -
 arch/arm/mach-msm/include/mach/board.h |   3 -
 arch/arm/mach-msm/msm_kcal_ctrl.c      | 471 ---------------------------------
 build_kernel.sh                        |   1 +
 drivers/video/msm/mdp.c                |  30 ++-
 drivers/video/msm/mdp.h                |   2 +
 drivers/video/msm/msm_fb.c             |   5 -
 11 files changed, 25 insertions(+), 522 deletions(-)
 delete mode 100644 arch/arm/mach-msm/msm_kcal_ctrl.c

diff --git a/arch/arm/configs/AEL_config b/arch/arm/configs/AEL_config
index 39736c6..ec3c81b 100644
--- a/arch/arm/configs/AEL_config
+++ b/arch/arm/configs/AEL_config
@@ -53,7 +53,7 @@ CONFIG_IRQ_WORK=y
 CONFIG_EXPERIMENTAL=y
 CONFIG_INIT_ENV_ARG_LIMIT=32
 CONFIG_CROSS_COMPILE=""
-CONFIG_LOCALVERSION="-machinex-6.0"
+CONFIG_LOCALVERSION="-machinex-6.1"
 # CONFIG_LOCALVERSION_AUTO is not set
 CONFIG_HAVE_KERNEL_GZIP=y
 CONFIG_HAVE_KERNEL_LZMA=y
diff --git a/arch/arm/mach-msm/Kconfig b/arch/arm/mach-msm/Kconfig
index e71de15..96a5c19 100755
--- a/arch/arm/mach-msm/Kconfig
+++ b/arch/arm/mach-msm/Kconfig
@@ -3376,16 +3376,4 @@ config FORCE_FAST_CHARGE
 	  are detected as USB to charge as AC (1A/h) or to set
 	  custom charging currents for AC and USB.
 
-config UPDATE_LCDC_LUT
-        bool "Set initial Qualcomm LCDC lut"
-        default n
-        help
-          Set initial Qualcomm LCDC Look Up Table.
-
-config LCD_KCAL_STANDALONE
-        tristate "MSM generic LCDC Calibration"
-        default n
-        help
-          Enable MSM generic LCDC temperature Calibration.
-
 endif
diff --git a/arch/arm/mach-msm/Makefile b/arch/arm/mach-msm/Makefile
index fe9535a..c3f5c65 100755
--- a/arch/arm/mach-msm/Makefile
+++ b/arch/arm/mach-msm/Makefile
@@ -465,7 +465,6 @@ obj-$(CONFIG_MSM_CPU_PWRCTL) +=  msm_cpu_pwrctl.o
 
 obj-$(CONFIG_ARCH_RANDOM) += early_random.o
 obj-$(CONFIG_CPU_FREQ_MSM) += cpufreq.o
-obj-$(CONFIG_LCD_KCAL_STANDALONE) += msm_kcal_ctrl.o
 
 ifdef CONFIG_SEC_THERMISTOR
 obj-$(CONFIG_SEC_THERMISTOR) += sec_thermistor.o
diff --git a/arch/arm/mach-msm/board-8064-display.c b/arch/arm/mach-msm/board-8064-display.c
index 8e2c947..eb27f54 100644
--- a/arch/arm/mach-msm/board-8064-display.c
+++ b/arch/arm/mach-msm/board-8064-display.c
@@ -161,18 +161,8 @@ static int msm_fb_detect_panel(const char *name)
 	return -ENODEV;
 }
 
-#ifdef CONFIG_UPDATE_LCDC_LUT
-int update_preset_lcdc_lut(void)
-{
-	return 0;
-}
-#endif
-
 static struct msm_fb_platform_data msm_fb_pdata = {
 	.detect_client = msm_fb_detect_panel,
-#ifdef CONFIG_UPDATE_LCDC_LUT
-	.update_lcdc_lut = update_preset_lcdc_lut,
-#endif
 };
 
 static struct platform_device msm_fb_device = {
diff --git a/arch/arm/mach-msm/board-8960-display.c b/arch/arm/mach-msm/board-8960-display.c
index 37a5d01..f4b1d91 100644
--- a/arch/arm/mach-msm/board-8960-display.c
+++ b/arch/arm/mach-msm/board-8960-display.c
@@ -351,18 +351,8 @@ static int msm_fb_detect_panel(const char *name)
 	return -ENODEV;
 }
 
-#ifdef CONFIG_UPDATE_LCDC_LUT
-int update_preset_lcdc_lut(void)
-{
-	return 0;
-}
-#endif
-
 static struct msm_fb_platform_data msm_fb_pdata = {
 	.detect_client = msm_fb_detect_panel,
-#ifdef CONFIG_UPDATE_LCDC_LUT
-	.update_lcdc_lut = update_preset_lcdc_lut,
-#endif
 };
 
 static struct platform_device msm_fb_device = {
diff --git a/arch/arm/mach-msm/include/mach/board.h b/arch/arm/mach-msm/include/mach/board.h
index 8a53b70..4e663ef 100644
--- a/arch/arm/mach-msm/include/mach/board.h
+++ b/arch/arm/mach-msm/include/mach/board.h
@@ -654,9 +654,6 @@ struct msm_fb_platform_data {
 	int (*allow_set_offset)(void);
 	char prim_panel_name[PANEL_NAME_MAX_LEN];
 	char ext_panel_name[PANEL_NAME_MAX_LEN];
-#ifdef CONFIG_UPDATE_LCDC_LUT
-	int (*update_lcdc_lut)(void);
-#endif
 };
 
 struct msm_hdmi_platform_data {
diff --git a/arch/arm/mach-msm/msm_kcal_ctrl.c b/arch/arm/mach-msm/msm_kcal_ctrl.c
deleted file mode 100644
index 0addf37..0000000
--- a/arch/arm/mach-msm/msm_kcal_ctrl.c
+++ /dev/null
@@ -1,471 +0,0 @@
-/* arch/arm/mach-msm/msm_kcal_ctrl.c
- *
- * Interface to calibrate display color temperature.
- *
- * Copyright (C) 2012 LGE
- * Copyright (C) 2013 Paul Reioux
- *
- * This software is licensed under the terms of the GNU General Public
- * License version 2, as published by the Free Software Foundation, and
- * may be copied, distributed, and modified under those terms.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- */
-
-#include <linux/kernel.h>
-#include <linux/device.h>
-#include <linux/platform_device.h>
-#include <linux/init.h>
-#include <linux/module.h>
-#include <linux/kallsyms.h>
-#include <linux/earlysuspend.h>
-
-#include "../../../drivers/video/msm/mdp.h"
-
-#define KCAL_PLATFORM_NAME      "DIAG0"
-
-struct kcal_data {
-	int red;
-	int green;
-	int blue;
-};
-
-struct kcal_platform_data {
-	int (*set_values) (int r, int g, int b);
-	int (*get_values) (int *r, int *g, int *b);
-	int (*refresh_display) (void);
-};
-
-static bool lut_updated = false;
-static struct kcal_platform_data *kcal_ctrl_pdata;
-static int last_status_kcal_ctrl;
-
-/* pixel order : RBG */
-static unsigned int lcd_rgb_linear_lut[256] = {
-	/* default linear qlut */
-	0x00000000, 0x00010101, 0x00020202, 0x00030303,
-	0x00040404, 0x00050505, 0x00060606, 0x00070707,
-	0x00080808, 0x00090909, 0x000a0a0a, 0x000b0b0b,
-	0x000c0c0c, 0x000d0d0d, 0x000e0e0e, 0x000f0f0f,
-	0x00101010, 0x00111111, 0x00121212, 0x00131313,
-	0x00141414, 0x00151515, 0x00161616, 0x00171717,
-	0x00181818, 0x00191919, 0x001a1a1a, 0x001b1b1b,
-	0x001c1c1c, 0x001d1d1d, 0x001e1e1e, 0x001f1f1f,
-	0x00202020, 0x00212121, 0x00222222, 0x00232323,
-	0x00242424, 0x00252525, 0x00262626, 0x00272727,
-	0x00282828, 0x00292929, 0x002a2a2a, 0x002b2b2b,
-	0x002c2c2c, 0x002d2d2d, 0x002e2e2e, 0x002f2f2f,
-	0x00303030, 0x00313131, 0x00323232, 0x00333333,
-	0x00343434, 0x00353535, 0x00363636, 0x00373737,
-	0x00383838, 0x00393939, 0x003a3a3a, 0x003b3b3b,
-	0x003c3c3c, 0x003d3d3d, 0x003e3e3e, 0x003f3f3f,
-	0x00404040, 0x00414141, 0x00424242, 0x00434343,
-	0x00444444, 0x00454545, 0x00464646, 0x00474747,
-	0x00484848, 0x00494949, 0x004a4a4a, 0x004b4b4b,
-	0x004c4c4c, 0x004d4d4d, 0x004e4e4e, 0x004f4f4f,
-	0x00505050, 0x00515151, 0x00525252, 0x00535353,
-	0x00545454, 0x00555555, 0x00565656, 0x00575757,
-	0x00585858, 0x00595959, 0x005a5a5a, 0x005b5b5b,
-	0x005c5c5c, 0x005d5d5d, 0x005e5e5e, 0x005f5f5f,
-	0x00606060, 0x00616161, 0x00626262, 0x00636363,
-	0x00646464, 0x00656565, 0x00666666, 0x00676767,
-	0x00686868, 0x00696969, 0x006a6a6a, 0x006b6b6b,
-	0x006c6c6c, 0x006d6d6d, 0x006e6e6e, 0x006f6f6f,
-	0x00707070, 0x00717171, 0x00727272, 0x00737373,
-	0x00747474, 0x00757575, 0x00767676, 0x00777777,
-	0x00787878, 0x00797979, 0x007a7a7a, 0x007b7b7b,
-	0x007c7c7c, 0x007d7d7d, 0x007e7e7e, 0x007f7f7f,
-	0x00808080, 0x00818181, 0x00828282, 0x00838383,
-	0x00848484, 0x00858585, 0x00868686, 0x00878787,
-	0x00888888, 0x00898989, 0x008a8a8a, 0x008b8b8b,
-	0x008c8c8c, 0x008d8d8d, 0x008e8e8e, 0x008f8f8f,
-	0x00909090, 0x00919191, 0x00929292, 0x00939393,
-	0x00949494, 0x00959595, 0x00969696, 0x00979797,
-	0x00989898, 0x00999999, 0x009a9a9a, 0x009b9b9b,
-	0x009c9c9c, 0x009d9d9d, 0x009e9e9e, 0x009f9f9f,
-	0x00a0a0a0, 0x00a1a1a1, 0x00a2a2a2, 0x00a3a3a3,
-	0x00a4a4a4, 0x00a5a5a5, 0x00a6a6a6, 0x00a7a7a7,
-	0x00a8a8a8, 0x00a9a9a9, 0x00aaaaaa, 0x00ababab,
-	0x00acacac, 0x00adadad, 0x00aeaeae, 0x00afafaf,
-	0x00b0b0b0, 0x00b1b1b1, 0x00b2b2b2, 0x00b3b3b3,
-	0x00b4b4b4, 0x00b5b5b5, 0x00b6b6b6, 0x00b7b7b7,
-	0x00b8b8b8, 0x00b9b9b9, 0x00bababa, 0x00bbbbbb,
-	0x00bcbcbc, 0x00bdbdbd, 0x00bebebe, 0x00bfbfbf,
-	0x00c0c0c0, 0x00c1c1c1, 0x00c2c2c2, 0x00c3c3c3,
-	0x00c4c4c4, 0x00c5c5c5, 0x00c6c6c6, 0x00c7c7c7,
-	0x00c8c8c8, 0x00c9c9c9, 0x00cacaca, 0x00cbcbcb,
-	0x00cccccc, 0x00cdcdcd, 0x00cecece, 0x00cfcfcf,
-	0x00d0d0d0, 0x00d1d1d1, 0x00d2d2d2, 0x00d3d3d3,
-	0x00d4d4d4, 0x00d5d5d5, 0x00d6d6d6, 0x00d7d7d7,
-	0x00d8d8d8, 0x00d9d9d9, 0x00dadada, 0x00dbdbdb,
-	0x00dcdcdc, 0x00dddddd, 0x00dedede, 0x00dfdfdf,
-	0x00e0e0e0, 0x00e1e1e1, 0x00e2e2e2, 0x00e3e3e3,
-	0x00e4e4e4, 0x00e5e5e5, 0x00e6e6e6, 0x00e7e7e7,
-	0x00e8e8e8, 0x00e9e9e9, 0x00eaeaea, 0x00ebebeb,
-	0x00ececec, 0x00ededed, 0x00eeeeee, 0x00efefef,
-	0x00f0f0f0, 0x00f1f1f1, 0x00f2f2f2, 0x00f3f3f3,
-	0x00f4f4f4, 0x00f5f5f5, 0x00f6f6f6, 0x00f7f7f7,
-	0x00f8f8f8, 0x00f9f9f9, 0x00fafafa, 0x00fbfbfb,
-	0x00fcfcfc, 0x00fdfdfd, 0x00fefefe, 0x00ffffff
-};
-
-/* pixel order : RBG */
-static unsigned int lcd_rgb_working_lut[256] = {
-	/* default linear qlut */
-	0x00000000, 0x00010101, 0x00020202, 0x00030303,
-	0x00040404, 0x00050505, 0x00060606, 0x00070707,
-	0x00080808, 0x00090909, 0x000a0a0a, 0x000b0b0b,
-	0x000c0c0c, 0x000d0d0d, 0x000e0e0e, 0x000f0f0f,
-	0x00101010, 0x00111111, 0x00121212, 0x00131313,
-	0x00141414, 0x00151515, 0x00161616, 0x00171717,
-	0x00181818, 0x00191919, 0x001a1a1a, 0x001b1b1b,
-	0x001c1c1c, 0x001d1d1d, 0x001e1e1e, 0x001f1f1f,
-	0x00202020, 0x00212121, 0x00222222, 0x00232323,
-	0x00242424, 0x00252525, 0x00262626, 0x00272727,
-	0x00282828, 0x00292929, 0x002a2a2a, 0x002b2b2b,
-	0x002c2c2c, 0x002d2d2d, 0x002e2e2e, 0x002f2f2f,
-	0x00303030, 0x00313131, 0x00323232, 0x00333333,
-	0x00343434, 0x00353535, 0x00363636, 0x00373737,
-	0x00383838, 0x00393939, 0x003a3a3a, 0x003b3b3b,
-	0x003c3c3c, 0x003d3d3d, 0x003e3e3e, 0x003f3f3f,
-	0x00404040, 0x00414141, 0x00424242, 0x00434343,
-	0x00444444, 0x00454545, 0x00464646, 0x00474747,
-	0x00484848, 0x00494949, 0x004a4a4a, 0x004b4b4b,
-	0x004c4c4c, 0x004d4d4d, 0x004e4e4e, 0x004f4f4f,
-	0x00505050, 0x00515151, 0x00525252, 0x00535353,
-	0x00545454, 0x00555555, 0x00565656, 0x00575757,
-	0x00585858, 0x00595959, 0x005a5a5a, 0x005b5b5b,
-	0x005c5c5c, 0x005d5d5d, 0x005e5e5e, 0x005f5f5f,
-	0x00606060, 0x00616161, 0x00626262, 0x00636363,
-	0x00646464, 0x00656565, 0x00666666, 0x00676767,
-	0x00686868, 0x00696969, 0x006a6a6a, 0x006b6b6b,
-	0x006c6c6c, 0x006d6d6d, 0x006e6e6e, 0x006f6f6f,
-	0x00707070, 0x00717171, 0x00727272, 0x00737373,
-	0x00747474, 0x00757575, 0x00767676, 0x00777777,
-	0x00787878, 0x00797979, 0x007a7a7a, 0x007b7b7b,
-	0x007c7c7c, 0x007d7d7d, 0x007e7e7e, 0x007f7f7f,
-	0x00808080, 0x00818181, 0x00828282, 0x00838383,
-	0x00848484, 0x00858585, 0x00868686, 0x00878787,
-	0x00888888, 0x00898989, 0x008a8a8a, 0x008b8b8b,
-	0x008c8c8c, 0x008d8d8d, 0x008e8e8e, 0x008f8f8f,
-	0x00909090, 0x00919191, 0x00929292, 0x00939393,
-	0x00949494, 0x00959595, 0x00969696, 0x00979797,
-	0x00989898, 0x00999999, 0x009a9a9a, 0x009b9b9b,
-	0x009c9c9c, 0x009d9d9d, 0x009e9e9e, 0x009f9f9f,
-	0x00a0a0a0, 0x00a1a1a1, 0x00a2a2a2, 0x00a3a3a3,
-	0x00a4a4a4, 0x00a5a5a5, 0x00a6a6a6, 0x00a7a7a7,
-	0x00a8a8a8, 0x00a9a9a9, 0x00aaaaaa, 0x00ababab,
-	0x00acacac, 0x00adadad, 0x00aeaeae, 0x00afafaf,
-	0x00b0b0b0, 0x00b1b1b1, 0x00b2b2b2, 0x00b3b3b3,
-	0x00b4b4b4, 0x00b5b5b5, 0x00b6b6b6, 0x00b7b7b7,
-	0x00b8b8b8, 0x00b9b9b9, 0x00bababa, 0x00bbbbbb,
-	0x00bcbcbc, 0x00bdbdbd, 0x00bebebe, 0x00bfbfbf,
-	0x00c0c0c0, 0x00c1c1c1, 0x00c2c2c2, 0x00c3c3c3,
-	0x00c4c4c4, 0x00c5c5c5, 0x00c6c6c6, 0x00c7c7c7,
-	0x00c8c8c8, 0x00c9c9c9, 0x00cacaca, 0x00cbcbcb,
-	0x00cccccc, 0x00cdcdcd, 0x00cecece, 0x00cfcfcf,
-	0x00d0d0d0, 0x00d1d1d1, 0x00d2d2d2, 0x00d3d3d3,
-	0x00d4d4d4, 0x00d5d5d5, 0x00d6d6d6, 0x00d7d7d7,
-	0x00d8d8d8, 0x00d9d9d9, 0x00dadada, 0x00dbdbdb,
-	0x00dcdcdc, 0x00dddddd, 0x00dedede, 0x00dfdfdf,
-	0x00e0e0e0, 0x00e1e1e1, 0x00e2e2e2, 0x00e3e3e3,
-	0x00e4e4e4, 0x00e5e5e5, 0x00e6e6e6, 0x00e7e7e7,
-	0x00e8e8e8, 0x00e9e9e9, 0x00eaeaea, 0x00ebebeb,
-	0x00ececec, 0x00ededed, 0x00eeeeee, 0x00efefef,
-	0x00f0f0f0, 0x00f1f1f1, 0x00f2f2f2, 0x00f3f3f3,
-	0x00f4f4f4, 0x00f5f5f5, 0x00f6f6f6, 0x00f7f7f7,
-	0x00f8f8f8, 0x00f9f9f9, 0x00fafafa, 0x00fbfbfb,
-	0x00fcfcfc, 0x00fdfdfd, 0x00fefefe, 0x00ffffff
-};
-
-static void resetWorkingLut(void)
-{
-	memcpy((void *)lcd_rgb_working_lut, (void *)lcd_rgb_linear_lut,
-		sizeof(lcd_rgb_linear_lut));
-}
-
-static void updateLUT(unsigned int lut_val, unsigned int color,
-			unsigned int posn)
-{
-	int offset, mask;
-
-	if (lut_val > 0xff)
-		return;
-
-	if (color == 0) {
-		offset = 16;
-		mask = 0x0000ffff;
-	} else if (color == 1) {
-		offset = 8;
-		mask = 0x00ff00ff;
-	} else if (color == 2) {
-		offset = 0;
-		mask = 0x00ffff00;
-	} else
-		// bad color select!
-		return;
-
-	lcd_rgb_working_lut[posn] = (lcd_rgb_working_lut[posn] & mask) |
-					(lut_val << offset);
-}
-
-static ssize_t kgamma_store(struct device *dev, struct device_attribute *attr,
-                                                const char *buf, size_t count)
-{
-	int lut, color, posn;
-
-	if (!count)
-		return -EINVAL;
-
-	sscanf(buf, "%u %u %u", &lut, &color, &posn);
-
-	if (lut > 0xff)
-		return count;
-
-	if (posn > 0xff)
-		return count;
-
-	if (color > 2)
-		return count;
-
-	updateLUT(lut, color, posn);
-	lut_updated = true;
-	return count;
-}
-
-static ssize_t kgamma_show(struct device *dev, struct device_attribute *attr,
-                                                                char *buf)
-{
-	int res = 0;
-
-	if (lut_updated) {
-		res = sprintf(buf, "OK\n");
-		lut_updated = false;
-	} else
-		res = sprintf(buf, "NG\n");
-
-	return res;
-
-}
-
-static ssize_t kgamma_reset_store(struct device *dev,
-				struct device_attribute *attr,
-				const char *buf, size_t count)
-{
-	int reset;
-
-	if (!count)
-		return -EINVAL;
-
-	sscanf(buf, "%u", &reset);
-
-	if (reset)
-		resetWorkingLut();
-
-	return count;
-}
-
-static ssize_t kgamma_reset_show(struct device *dev,
-				struct device_attribute *attr,
-				char *buf)
-{
-	return 0;
-}
-
-static struct kcal_data kcal_value = {255, 255, 255};
-
-static int update_lcdc_lut(void)
-{
-	struct fb_cmap cmap;
-	int ret = 0;
-
-	cmap.start = 0;
-	cmap.len = 256;
-	cmap.transp = NULL;
-
-	cmap.red = (uint16_t *)&(kcal_value.red);
-	cmap.green = (uint16_t *)&(kcal_value.green);
-	cmap.blue = (uint16_t *)&(kcal_value.blue);
-
-	ret = mdp_preset_lut_update_lcdc(&cmap, lcd_rgb_working_lut);
-
-	return ret;
-}
-
-static int kcal_set_values(int kcal_r, int kcal_g, int kcal_b)
-{
-        kcal_value.red = kcal_r;
-        kcal_value.green = kcal_g;
-        kcal_value.blue = kcal_b;
-        return 0;
-}
-
-static int kcal_get_values(int *kcal_r, int *kcal_g, int *kcal_b)
-{
-        *kcal_r = kcal_value.red;
-        *kcal_g = kcal_value.green;
-        *kcal_b = kcal_value.blue;
-        return 0;
-}
-
-static int kcal_refresh_values(void)
-{
-	return update_lcdc_lut();
-}
-
-static ssize_t kcal_store(struct device *dev, struct device_attribute *attr,
-						const char *buf, size_t count)
-{
-	int kcal_r = 0;
-	int kcal_g = 0;
-	int kcal_b = 0;
-
-	if (!count)
-		return -EINVAL;
-
-	sscanf(buf, "%d %d %d", &kcal_r, &kcal_g, &kcal_b);
-	kcal_ctrl_pdata->set_values(kcal_r, kcal_g, kcal_b);
-	return count;
-}
-
-static ssize_t kcal_show(struct device *dev, struct device_attribute *attr,
-								char *buf)
-{
-	int kcal_r = 0;
-	int kcal_g = 0;
-	int kcal_b = 0;
-
-	kcal_ctrl_pdata->get_values(&kcal_r, &kcal_g, &kcal_b);
-
-	return sprintf(buf, "%d %d %d\n", kcal_r, kcal_g, kcal_b);
-}
-
-static ssize_t kcal_ctrl_store(struct device *dev,
-		struct device_attribute *attr, const char *buf, size_t count)
-{
-	int cmd = 0;
-
-	if (!count)
-		return last_status_kcal_ctrl = -EINVAL;
-
-	sscanf(buf, "%d", &cmd);
-
-	if (cmd != 1)
-		return last_status_kcal_ctrl = -EINVAL;
-
-	last_status_kcal_ctrl = kcal_ctrl_pdata->refresh_display();
-
-	if (last_status_kcal_ctrl)
-		return -EINVAL;
-	else
-		return count;
-}
-
-static ssize_t kcal_ctrl_show(struct device *dev,
-				struct device_attribute *attr, char *buf)
-{
-	if (last_status_kcal_ctrl)
-		return sprintf(buf, "NG\n");
-	else
-		return sprintf(buf, "OK\n");
-}
-
-static DEVICE_ATTR(power_reset, 0664, kgamma_reset_show, kgamma_reset_store);
-static DEVICE_ATTR(power_line, 0664, kgamma_show, kgamma_store);
-static DEVICE_ATTR(power_rail, 0664, kcal_show, kcal_store);
-static DEVICE_ATTR(power_rail_ctrl, 0664, kcal_ctrl_show, kcal_ctrl_store);
-
-static int kcal_ctrl_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	kcal_ctrl_pdata = pdev->dev.platform_data;
-
-	if (!kcal_ctrl_pdata->set_values || !kcal_ctrl_pdata->get_values ||
-					!kcal_ctrl_pdata->refresh_display) {
-		ret = -1;
-		goto end;
-	}
-
-	ret  = device_create_file(&pdev->dev, &dev_attr_power_reset);
-	if (ret)
-		goto end;
-
-	ret = device_create_file(&pdev->dev, &dev_attr_power_line);
-	if (ret)
-		goto end;
-
-	ret = device_create_file(&pdev->dev, &dev_attr_power_rail);
-	if (ret)
-		goto end;
-
-	ret = device_create_file(&pdev->dev, &dev_attr_power_rail_ctrl);
-
-end:
-	return ret;
-}
-
-static struct kcal_platform_data kcal_pdata = {
-	.set_values = kcal_set_values,
-	.get_values = kcal_get_values,
-	.refresh_display = kcal_refresh_values
-};
-
-static struct platform_device kcal_platform_device = {
-	.name   = KCAL_PLATFORM_NAME,
-	.dev = {
-		.platform_data = &kcal_pdata,
-	}
-};
-
-static struct platform_device *msm_panel_devices[] __initdata = {
-	&kcal_platform_device,
-};
-
-static struct platform_driver this_driver = {
-	.probe  = kcal_ctrl_probe,
-	.driver = {
-		.name   = KCAL_PLATFORM_NAME,
-	},
-};
-
-typedef int (*funcPtr)(void);
-
-static void msm_kcal_early_suspend(struct early_suspend *handler)
-{
-	return;
-}
-
-static void msm_kcal_late_resume(struct early_suspend *handler)
-{
-	kcal_ctrl_pdata->refresh_display();
-}
-
-static struct early_suspend msm_kcal_early_suspend_struct_driver = {
-        .level = EARLY_SUSPEND_LEVEL_DISABLE_FB,
-        .suspend = msm_kcal_early_suspend,
-        .resume = msm_kcal_late_resume,
-};
-
-int __init kcal_ctrl_init(void)
-{
-	int ret = 0;
-
-	ret = platform_add_devices(msm_panel_devices,
-		ARRAY_SIZE(msm_panel_devices));
-
-	if (ret)
-		return ret;
-
-	register_early_suspend(&msm_kcal_early_suspend_struct_driver);
-
-	return platform_driver_register(&this_driver);
-}
-
-late_initcall(kcal_ctrl_init);
-MODULE_LICENSE("GPL and additional rights");
-
diff --git a/build_kernel.sh b/build_kernel.sh
index 2624fa4..2eaf8b3 100755
--- a/build_kernel.sh
+++ b/build_kernel.sh
@@ -3,6 +3,7 @@ rm -rf $(pwd)/out;
 rm $(pwd)/arch/arm/boot/dhd.ko;
 rm $(pwd)/arch/arm/boot/scsi_wait_scan.ko;
 rm $(pwd)/arch/arm/boot/zImage;
+rm $(pwd)/arch/arm/boot/boot.img-zImage;
 export ARCH=arm
 export CROSS_COMPILE=/opt/toolchains/arm-cortex_a15-linux-gnueabihf-linaro_4.9.4-2015.06/bin/arm-cortex_a15-linux-gnueabihf-
 make clean;
diff --git a/drivers/video/msm/mdp.c b/drivers/video/msm/mdp.c
index 13c6ba3..a458d80 100644
--- a/drivers/video/msm/mdp.c
+++ b/drivers/video/msm/mdp.c
@@ -186,8 +186,10 @@ boolean mdp_shutdown_check = FALSE;
 #endif
 #ifndef CONFIG_FB_MSM_MDP22
 
+#define MDP_HIST_LUT_SIZE (256)
 struct list_head mdp_hist_lut_list;
 DEFINE_MUTEX(mdp_hist_lut_list_mutex);
+uint32_t last_lut[MDP_HIST_LUT_SIZE];
 
 uint32_t mdp_block2base(uint32_t block)
 {
@@ -314,10 +316,13 @@ static int mdp_hist_lut_destroy(void)
 
 static int mdp_hist_lut_init(void)
 {
+	int i;
 	struct mdp_hist_lut_mgmt *temp;
 
 	if (mdp_pp_initialized)
 		return -EEXIST;
+	for (i = 0; i < MDP_HIST_LUT_SIZE; i++)
+		last_lut[i] = i | (i << 8) | (i << 16);
 
 	INIT_LIST_HEAD(&mdp_hist_lut_list);
 
@@ -378,7 +383,6 @@ static int mdp_hist_lut_block2mgmt(uint32_t block,
 	return ret;
 }
 
-#define MDP_HIST_LUT_SIZE (256)
 static int mdp_hist_lut_write_off(struct mdp_hist_lut_data *data,
 		struct mdp_hist_lut_info *info, uint32_t offset)
 {
@@ -400,9 +404,11 @@ static int mdp_hist_lut_write_off(struct mdp_hist_lut_data *data,
 	}
 	mdp_clk_ctrl(1);
 	mdp_pipe_ctrl(MDP_CMD_BLOCK, MDP_BLOCK_POWER_ON, FALSE);
-	for (i = 0; i < MDP_HIST_LUT_SIZE; i++)
+	for (i = 0; i < MDP_HIST_LUT_SIZE; i++) {
+		last_lut[i] = element[i];
 		MDP_OUTP(MDP_BASE + base + offset + (0x400*(sel)) + (4*i),
 				element[i]);
+	}
 	mdp_pipe_ctrl(MDP_CMD_BLOCK, MDP_BLOCK_POWER_OFF, FALSE);
 	mdp_clk_ctrl(0);
 
@@ -579,15 +585,14 @@ static int mdp_lut_hw_update(struct fb_cmap *cmap)
 		    copy_from_user(&b, cmap->blue++, sizeof(b)))
 			return -EFAULT;
 
+		last_lut[i] = ((g & 0xff) | ((b & 0xff) << 8) |
+				((r & 0xff) << 16));
 #ifdef CONFIG_FB_MSM_MDP40
 		MDP_OUTP(MDP_BASE + 0x94800 +
 #else
 		MDP_OUTP(MDP_BASE + 0x93800 +
 #endif
-			(0x400*mdp_lut_i) + cmap->start*4 + i*4,
-				((g & 0xff) |
-				 ((b & 0xff) << 8) |
-				 ((r & 0xff) << 16)));
+			(0x400*mdp_lut_i) + cmap->start*4 + i*4, last_lut[i]);
 	}
 
 	return 0;
@@ -681,11 +686,11 @@ int mdp_preset_lut_update_lcdc(struct fb_cmap *cmap, uint32_t *internal_lut)
 		r = lut2r(internal_lut[i]);
 		g = lut2g(internal_lut[i]);
 		b = lut2b(internal_lut[i]);
-
+#ifdef CONFIG_LCD_KCAL
 		r = scaled_by_kcal(r, *(cmap->red));
 		g = scaled_by_kcal(g, *(cmap->green));
 		b = scaled_by_kcal(b, *(cmap->blue));
-
+#endif
 		MDP_OUTP(MDP_BASE + 0x94800 +
 			(0x400*mdp_lut_i) + cmap->start*4 + i*4,
 				((g & 0xff) |
@@ -702,7 +707,6 @@ int mdp_preset_lut_update_lcdc(struct fb_cmap *cmap, uint32_t *internal_lut)
 
 	return 0;
 }
-EXPORT_SYMBOL(mdp_preset_lut_update_lcdc);
 #endif
 
 static void mdp_lut_enable(void)
@@ -2445,6 +2449,7 @@ static int mdp_on(struct platform_device *pdev)
 	int ret = 0;
 	unsigned long flag;
 	struct msm_fb_data_type *mfd;
+	int i;
 	mfd = platform_get_drvdata(pdev);
 
 	pr_debug("%s:+\n", __func__);
@@ -2459,6 +2464,13 @@ static int mdp_on(struct platform_device *pdev)
 		mdp_bus_scale_restore_request();
 
 		mdp4_hw_init();
+
+		/* Initialize HistLUT to last LUT */
+		for (i = 0; i < MDP_HIST_LUT_SIZE; i++) {
+			MDP_OUTP(MDP_BASE + 0x94800 + i*4, last_lut[i]);
+			MDP_OUTP(MDP_BASE + 0x94C00 + i*4, last_lut[i]);
+		}
+
 		mdp_lut_status_restore();
 		outpdw(MDP_BASE + 0x0038, mdp4_display_intf);
 		if (mfd->panel.type == MIPI_CMD_PANEL) {
diff --git a/drivers/video/msm/mdp.h b/drivers/video/msm/mdp.h
index aab6953..45d70a4 100644
--- a/drivers/video/msm/mdp.h
+++ b/drivers/video/msm/mdp.h
@@ -953,11 +953,13 @@ static inline void mdp_vid_quant_set(void)
 #define lut2g(lut) ((lut & G_MASK) >> G_SHIFT)
 #define lut2b(lut) ((lut & B_MASK) >> B_SHIFT)
 
+#ifdef CONFIG_LCD_KCAL
 #define NUM_QLUT  256
 #define MAX_KCAL_V (NUM_QLUT-1)
 #define scaled_by_kcal(rgb, kcal) \
 		(((((unsigned int)(rgb) * (unsigned int)(kcal)) << 16) / \
 		(unsigned int)MAX_KCAL_V) >> 16)
+#endif
 int mdp_preset_lut_update_lcdc(struct fb_cmap *cmap, uint32_t *internal_lut);
 #endif
 #endif /* MDP_H */
diff --git a/drivers/video/msm/msm_fb.c b/drivers/video/msm/msm_fb.c
index 4a7e064..3ad64c7 100644
--- a/drivers/video/msm/msm_fb.c
+++ b/drivers/video/msm/msm_fb.c
@@ -1622,11 +1622,6 @@ static int msm_fb_register(struct msm_fb_data_type *mfd)
 	    ("FrameBuffer[%d] %dx%d size=%d bytes is registered successfully!\n",
 	     mfd->index, fbi->var.xres, fbi->var.yres, fbi->fix.smem_len);
 
-#ifdef CONFIG_UPDATE_LCDC_LUT
-	if (msm_fb_pdata->update_lcdc_lut)
-		msm_fb_pdata->update_lcdc_lut();
-#endif
-
 #ifdef CONFIG_FB_MSM_LOGO
 	if (mfd->panel_info.type != DTV_PANEL) {
 #ifndef MSM_RGB_LOGO
-- 
2.8.0.rc3

