From ee22b92d1b24e0cabb7e1e611068b093208aa95e Mon Sep 17 00:00:00 2001
From: ausdim <koronaios@gmail.com>
Date: Wed, 12 Mar 2014 21:36:38 +0200
Subject: [PATCH] Make GENTLE_FAIR_SLEEPERS configurable thru sysfs

---
 kernel/ksysfs.c     | 41 +++++++++++++++++++++++++++++++++++++++++
 kernel/sched/fair.c |  8 +++++++-
 2 files changed, 48 insertions(+), 1 deletion(-)

diff --git a/kernel/ksysfs.c b/kernel/ksysfs.c
index 4e316e1..de3ed4a 100755
--- a/kernel/ksysfs.c
+++ b/kernel/ksysfs.c
@@ -189,9 +189,44 @@ static struct attribute_group kernel_attr_group = {
 	.attrs = kernel_attrs,
 };
 
+static unsigned int Lgentle_fair_sleepers = 1;
+extern void relay_gfs(unsigned int gfs);
+
+static ssize_t gentle_fair_sleepers_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+{
+	return sprintf(buf, "%u\n", Lgentle_fair_sleepers);
+}
+static ssize_t gentle_fair_sleepers_store(struct kobject *kobj, struct kobj_attribute *attr, const char *buf, size_t count)
+{
+	unsigned int input;
+	int ret;
+	ret = sscanf(buf, "%u", &input);
+	if (input != 0 && input != 1)
+		input = 0;
+	
+	Lgentle_fair_sleepers = input;
+	relay_gfs(Lgentle_fair_sleepers);
+	return count;
+}
+
+static struct kobj_attribute gentle_fair_sleepers_attribute =
+__ATTR(gentle_fair_sleepers, 0666, gentle_fair_sleepers_show, gentle_fair_sleepers_store);
+
+static struct attribute *gentle_fair_sleepers_attrs[] = {
+&gentle_fair_sleepers_attribute.attr,
+NULL,
+};
+
+static struct attribute_group gentle_fair_sleepers_attr_group = {
+.attrs = gentle_fair_sleepers_attrs,
+};
+
+static struct kobject *gentle_fair_sleepers_kobj;
+
 static int __init ksysfs_init(void)
 {
 	int error;
+	int retval;
 
 	kernel_kobj = kobject_create_and_add("kernel", NULL);
 	if (!kernel_kobj) {
@@ -202,6 +237,12 @@ static int __init ksysfs_init(void)
 	if (error)
 		goto kset_exit;
 
+	gentle_fair_sleepers_kobj = kobject_create_and_add("sched", kernel_kobj);
+	retval = sysfs_create_group(gentle_fair_sleepers_kobj, &gentle_fair_sleepers_attr_group);
+
+	if (retval)
+		kobject_put(gentle_fair_sleepers_kobj);
+
 	if (notes_size > 0) {
 		notes_attr.size = notes_size;
 		error = sysfs_create_bin_file(kernel_kobj, &notes_attr);
diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index b175073..0fb96cb 100755
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -1054,6 +1054,12 @@ static void check_spread(struct cfs_rq *cfs_rq, struct sched_entity *se)
 #endif
 }
 
+static unsigned int Lgentle_fair_sleepers = 1;
+void relay_gfs(unsigned int gfs)
+{
+	Lgentle_fair_sleepers = gfs;
+}
+
 static void
 place_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int initial)
 {
@@ -1076,7 +1082,7 @@ place_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int initial)
 		 * Halve their sleep time's effect, to allow
 		 * for a gentler effect of sleepers:
 		 */
-		if (sched_feat(GENTLE_FAIR_SLEEPERS))
+		if (Lgentle_fair_sleepers)
 			thresh >>= 1;
 
 		vruntime -= thresh;
