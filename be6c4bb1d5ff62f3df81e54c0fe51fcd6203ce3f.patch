From be6c4bb1d5ff62f3df81e54c0fe51fcd6203ce3f Mon Sep 17 00:00:00 2001
From: Pranav Vashi <neobuddy89@gmail.com>
Date: Mon, 24 Aug 2015 12:30:34 +0530
Subject: [PATCH] msm: Fix some trivial warnings

Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>
---
 arch/arm/mach-msm/msm_hotplug.c | 36 +-----------------------------------
 drivers/cpufreq/cpu-boost.c     |  8 ++++++--
 2 files changed, 7 insertions(+), 37 deletions(-)

diff --git a/arch/arm/mach-msm/msm_hotplug.c b/arch/arm/mach-msm/msm_hotplug.c
index 2746fc6..b13faa5 100644
--- a/arch/arm/mach-msm/msm_hotplug.c
+++ b/arch/arm/mach-msm/msm_hotplug.c
@@ -466,6 +466,7 @@ static void msm_hotplug_work(struct work_struct *work)
 	reschedule_hotplug_work();
 }
 
+#ifdef CONFIG_STATE_NOTIFIER
 static void msm_hotplug_suspend(void)
 {
 	int cpu;
@@ -527,7 +528,6 @@ static void __ref msm_hotplug_resume(void)
 		reschedule_hotplug_work();
 }
 
-#ifdef CONFIG_STATE_NOTIFIER
 static int state_notifier_callback(struct notifier_block *this,
 				unsigned long event, void *data)
 {
@@ -942,38 +942,6 @@ static ssize_t store_load_levels(struct device *dev,
 	return count;
 }
 
-static ssize_t show_history_size(struct device *dev,
-				 struct device_attribute *msm_hotplug_attrs,
-				 char *buf)
-{
-	return sprintf(buf, "%u\n", stats.hist_size);
-}
-
-static ssize_t store_history_size(struct device *dev,
-				  struct device_attribute *msm_hotplug_attrs,
-				  const char *buf, size_t count)
-{
-	int ret;
-	unsigned int val;
-
-	ret = sscanf(buf, "%u", &val);
-	if (ret != 1 || val < 1 || val > 20)
-		return -EINVAL;
-
-	if (hotplug.msm_enabled) {
-		flush_workqueue(hotplug_wq);
-		cancel_delayed_work_sync(&hotplug_work);
-		memset(stats.load_hist, 0, sizeof(stats.load_hist));
-	}
-
-	stats.hist_size = val;
-
-	if (hotplug.msm_enabled)
-		reschedule_hotplug_work();
-
-	return count;
-}
-
 static ssize_t show_min_cpus_online(struct device *dev,
 				    struct device_attribute *msm_hotplug_attrs,
 				    char *buf)
@@ -1155,7 +1123,6 @@ static DEVICE_ATTR(boost_lock_duration, 644, show_boost_lock_duration,
 		   store_boost_lock_duration);
 static DEVICE_ATTR(update_rates, 644, show_update_rates, store_update_rates);
 static DEVICE_ATTR(load_levels, 644, show_load_levels, store_load_levels);
-static DEVICE_ATTR(history_size, 644, show_history_size, store_history_size);
 static DEVICE_ATTR(min_cpus_online, 644, show_min_cpus_online,
 		   store_min_cpus_online);
 static DEVICE_ATTR(max_cpus_online, 644, show_max_cpus_online,
@@ -1175,7 +1142,6 @@ static struct attribute *msm_hotplug_attrs[] = {
 	&dev_attr_boost_lock_duration.attr,
 	&dev_attr_update_rates.attr,
 	&dev_attr_load_levels.attr,
-	&dev_attr_history_size.attr,
 	&dev_attr_min_cpus_online.attr,
 	&dev_attr_max_cpus_online.attr,
 	&dev_attr_max_cpus_online_susp.attr,
diff --git a/drivers/cpufreq/cpu-boost.c b/drivers/cpufreq/cpu-boost.c
index 6fb2090..07c9bf9 100644
--- a/drivers/cpufreq/cpu-boost.c
+++ b/drivers/cpufreq/cpu-boost.c
@@ -48,7 +48,9 @@ static struct workqueue_struct *cpu_boost_wq;
 
 static struct work_struct input_boost_work;
 
+#ifdef CONFIG_STATE_NOTIFIER
 static struct notifier_block notif;
+#endif
 
 static unsigned int boost_ms;
 module_param(boost_ms, uint, 0644);
@@ -76,8 +78,10 @@ static bool sched_boost_active;
 static bool hotplug_boost = 1;
 module_param(hotplug_boost, bool, 0644);
 
+#ifdef CONFIG_STATE_NOTIFIER
 bool wakeup_boost;
 module_param(wakeup_boost, bool, 0644);
+#endif
 
 static struct delayed_work input_boost_rem;
 static u64 last_input_time;
@@ -517,7 +521,7 @@ static int cpuboost_cpu_callback(struct notifier_block *cpu_nb,
 		if (suspended || !hotplug_boost || !input_boost_enabled ||
 		     work_pending(&input_boost_work))
 			break;
-		pr_debug("Hotplug boost for CPU%d\n", (int)hcpu);
+		pr_debug("Hotplug boost for CPU%lu\n", (long)hcpu);
 		queue_work(cpu_boost_wq, &input_boost_work);
 		last_input_time = ktime_to_us(ktime_get());
 		break;
@@ -531,6 +535,7 @@ static struct notifier_block __refdata cpu_nblk = {
         .notifier_call = cpuboost_cpu_callback,
 };
 
+#ifdef CONFIG_STATE_NOTIFIER
 static void __wakeup_boost(void)
 {
 	if (!wakeup_boost || !input_boost_enabled ||
@@ -541,7 +546,6 @@ static void __wakeup_boost(void)
 	last_input_time = ktime_to_us(ktime_get());
 }
 
-#ifdef CONFIG_STATE_NOTIFIER
 static int state_notifier_callback(struct notifier_block *this,
 				unsigned long event, void *data)
 {
