From bc0faa3cece3174490ca264c8b364012a06974f4 Mon Sep 17 00:00:00 2001
From: flar2 <asegaert@gmail.com>
Date: Thu, 2 May 2013 21:17:46 -0400
Subject: [PATCH]  sched: fix init NOHZ_IDLE flag

---
 kernel/sched/core.c |  3 ++-
 kernel/sched/fair.c | 11 ++++++++---
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 139170a..b032be9f 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -6427,7 +6427,8 @@ static void init_sched_groups_power(int cpu, struct sched_domain *sd)
 		return;
 
 	update_group_power(sd, cpu);
-	atomic_set(&sg->sgp->nr_busy_cpus, sg->group_weight);
+	atomic_set(&sg->sgp->nr_busy_cpus, 0);
+	set_bit(NOHZ_IDLE, nohz_flags(cpu));
 }
 
 int __weak arch_sd_sibling_asym_packing(void)
diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 8c920ad..232c218 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -4833,15 +4833,20 @@ static inline void set_cpu_sd_state_busy(void)
 {
 	struct sched_domain *sd;
 	int cpu = smp_processor_id();
+	int clear = 0; 
 
 	if (!test_bit(NOHZ_IDLE, nohz_flags(cpu)))
 		return;
-	clear_bit(NOHZ_IDLE, nohz_flags(cpu));
-
+	
 	rcu_read_lock();
-	for_each_domain(cpu, sd)
+	for_each_domain(cpu, sd) {
 		atomic_inc(&sd->groups->sgp->nr_busy_cpus);
+		clear = 1; 
+	}
 	rcu_read_unlock();
+
+	if (likely(clear))
+    		clear_bit(NOHZ_IDLE, nohz_flags(cpu)); 
 }
 
 void set_cpu_sd_state_idle(void)
