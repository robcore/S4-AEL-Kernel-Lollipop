From 37904167c42743dbbd50c9162f7742ceedf4ba75 Mon Sep 17 00:00:00 2001
From: Alucard24 <dmbaoh2@gmail.com>
Date: Thu, 29 May 2014 23:19:10 +0200
Subject: [PATCH] LCD NOTIFY: Big thanks to @Dorimanx

---
 drivers/video/msm/Makefile     |  1 +
 drivers/video/msm/lcd_notify.c | 52 ++++++++++++++++++++++++++++++++++++++++++
 drivers/video/msm/mipi_dsi.c   | 11 +++++++++
 include/linux/lcd_notify.h     | 37 ++++++++++++++++++++++++++++++
 4 files changed, 101 insertions(+)
 create mode 100644 drivers/video/msm/lcd_notify.c
 create mode 100644 include/linux/lcd_notify.h

diff --git a/drivers/video/msm/Makefile b/drivers/video/msm/Makefile
index d739d87..2d26ed3 100644
--- a/drivers/video/msm/Makefile
+++ b/drivers/video/msm/Makefile
@@ -77,6 +77,7 @@ obj-$(CONFIG_FB_MSM_EXTMDDI) += msm_mddi_ext.o
 # MIPI gereric
 msm_mipi-objs := mipi_dsi.o mipi_dsi_host.o
 obj-$(CONFIG_FB_MSM_MIPI_DSI) += msm_mipi.o
+obj-$(CONFIG_MACH_JF) += lcd_notify.o
 
 # MIPI manufacture
 obj-$(CONFIG_FB_MSM_MIPI_DSI_TOSHIBA) += mipi_toshiba.o
diff --git a/drivers/video/msm/lcd_notify.c b/drivers/video/msm/lcd_notify.c
new file mode 100644
index 0000000..3b5a96c
--- /dev/null
+++ b/drivers/video/msm/lcd_notify.c
@@ -0,0 +1,52 @@
+/*
+ * drivers/video/msm/mdss/lcd_notify.c
+ *
+ * Copyright (C) 2013 LGE Inc
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/lcd_notify.h>
+#include <linux/notifier.h>
+#include <linux/export.h>
+
+static BLOCKING_NOTIFIER_HEAD(lcd_notifier_list);
+
+/**
+ *	lcd_register_client - register a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_register_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_register(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_register_client);
+
+/**
+ *	lcd_unregister_client - unregister a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_unregister_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_unregister(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_unregister_client);
+
+/**
+ *	lcd_notifier_call_chain - notify clients on lcd_events
+ *	@val: Value passed unmodified to notifier function
+ *	@v: pointer passed unmodified to notifier function
+ *
+ */
+int lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return blocking_notifier_call_chain(&lcd_notifier_list, val, v);
+}
+EXPORT_SYMBOL_GPL(lcd_notifier_call_chain);
diff --git a/drivers/video/msm/mipi_dsi.c b/drivers/video/msm/mipi_dsi.c
index 67a171f..6cd5bc8 100644
--- a/drivers/video/msm/mipi_dsi.c
+++ b/drivers/video/msm/mipi_dsi.c
@@ -34,6 +34,9 @@
 #include "mipi_dsi.h"
 #include "mdp.h"
 #include "mdp4.h"
+#ifdef CONFIG_MACH_JF
+#include <linux/lcd_notify.h>
+#endif
 
 #define DSI_VIDEO_BASE	0xE0000
 
@@ -133,6 +136,10 @@ static int mipi_dsi_off(struct platform_device *pdev)
 	mipi_dsi_unprepare_clocks();
 	mipi_dsi_unprepare_ahb_clocks();
 
+	#if defined(CONFIG_MACH_JF)
+		lcd_notifier_call_chain(LCD_EVENT_ON_END, NULL);
+	#endif
+
 	usleep(5000);
 
 	if (mipi_dsi_pdata && mipi_dsi_pdata->active_reset)
@@ -219,6 +226,10 @@ static int mipi_dsi_on(struct platform_device *pdev)
 		mipi_dsi_pdata->panel_power_save(1);
 #endif
 
+#if defined(CONFIG_MACH_JF)
+	lcd_notifier_call_chain(LCD_EVENT_ON_START, NULL);
+#endif
+
 	if (system_rev == 6)
 		mdelay(500);
 
diff --git a/include/linux/lcd_notify.h b/include/linux/lcd_notify.h
new file mode 100644
index 0000000..7b96137
--- /dev/null
+++ b/include/linux/lcd_notify.h
@@ -0,0 +1,37 @@
+#ifndef __LINUX_LCD_NOTIFY_H
+#define __LINUX_LCD_NOTIFY_H
+
+#include <linux/notifier.h>
+
+/* the display on process started */
+#define LCD_EVENT_ON_START		0x01
+/* the display on process end */
+#define LCD_EVENT_ON_END		0x02
+/* the display off process started */
+#define LCD_EVENT_OFF_START		0x03
+/* the display off process end */
+#define LCD_EVENT_OFF_END		0x04
+
+struct lcd_event {
+	void *data;
+};
+
+#ifdef CONFIG_MACH_JF
+int lcd_register_client(struct notifier_block *nb);
+int lcd_unregister_client(struct notifier_block *nb);
+int lcd_notifier_call_chain(unsigned long val, void *v);
+#else
+static int inline lcd_register_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_unregister_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return -ENOENT;
+}
+#endif
+#endif /* _LINUX_LCD_NOTIFY_H */
