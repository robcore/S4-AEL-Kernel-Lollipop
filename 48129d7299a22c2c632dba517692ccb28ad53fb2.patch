From 48129d7299a22c2c632dba517692ccb28ad53fb2 Mon Sep 17 00:00:00 2001
From: dorimanx <yuri@bynet.co.il>
Date: Sun, 18 May 2014 14:22:59 +0300
Subject: [PATCH] LINARO fixes for better ARM support. + small code
 corrections. by @bruce2728

https://github.com/bruce2728/kernel_lge_d802/commit/97280f182e1fbd1e36300727ae0ce50efa7f153f
https://github.com/bruce2728/kernel_lge_d802/commit/eee1f26f35502ca2f0fb3424309de7aea53d2c94

Conflicts:
	net/bluetooth/hci_conn.c
---
 arch/arm/boot/compressed/Makefile | 12 ++++++++++++
 fs/fs-writeback.c                 | 11 +++++++----
 kernel/workqueue.c                | 12 ++++++++++--
 net/bluetooth/hci_conn.c          |  2 +-
 net/ipv4/tcp_input.c              |  3 ++-
 5 files changed, 32 insertions(+), 8 deletions(-)

diff --git a/arch/arm/boot/compressed/Makefile b/arch/arm/boot/compressed/Makefile
index 9e32ff6..833738f 100644
--- a/arch/arm/boot/compressed/Makefile
+++ b/arch/arm/boot/compressed/Makefile
@@ -22,6 +22,13 @@ OBJS		+= sdhi-sh7372.o
 endif
 
 AFLAGS_head.o += -DTEXT_OFFSET=$(TEXT_OFFSET)
+AFLAGS_head.o += -Wa,-march=armv7-a$(plus_sec)
+AFLAGS_head.o += -Wa,-mcpu=cortex-a15
+AFLAGS_misc.o +=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_misc.o += -Wa,-mcpu=cortex-a15
+AFLAGS_decompress.o += -Wa,-march=armv7-a$(plus_sec)
+AFLAGS_decompress.o += -Wa,-mcpu=cortex-a15
+
 HEAD	= head.o
 OBJS	+= misc.o decompress.o
 FONTC	= $(srctree)/drivers/video/console/font_acorn_8x8.c
@@ -154,12 +161,15 @@ LDFLAGS_vmlinux += -X
 LDFLAGS_vmlinux += -T
 
 # For __aeabi_uidivmod
+AFLAGS_lib1funcs.o +=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_lib1funcs.o += -Wa,-mcpu=cortex-a15
 lib1funcs = $(obj)/lib1funcs.o
 
 $(obj)/lib1funcs.S: $(srctree)/arch/$(SRCARCH)/lib/lib1funcs.S
 	$(call cmd,shipped)
 
 # For __aeabi_llsl
+AFLAGS_ashldi3.o +=-Wa,-march=armv7-a$(plus_sec)
 ashldi3 = $(obj)/ashldi3.o
 
 $(obj)/ashldi3.S: $(srctree)/arch/$(SRCARCH)/lib/ashldi3.S
@@ -194,6 +204,8 @@ $(obj)/vmlinux: $(obj)/vmlinux.lds $(obj)/$(HEAD) $(obj)/piggy.$(suffix_y).o \
 $(obj)/piggy.$(suffix_y): $(obj)/../Image FORCE
 	$(call if_changed,$(suffix_y))
 
+AFLAGS_piggy.$(suffix_y).o += -Wa,-march=armv7-a$(plus_sec)
+AFLAGS_piggy.$(suffix_y).o += -Wa,-mcpu=cortex-a15
 $(obj)/piggy.$(suffix_y).o:  $(obj)/piggy.$(suffix_y) FORCE
 
 CFLAGS_font.o := -Dstatic=
diff --git a/fs/fs-writeback.c b/fs/fs-writeback.c
index baa531d..e6d8c68 100644
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@ -993,7 +993,10 @@ long wb_do_writeback(struct bdi_writeback *wb, int force_wait)
 		if (force_wait)
 			work->sync_mode = WB_SYNC_ALL;
 
-		trace_writeback_exec(bdi, work);
+		/* This trace causes an ICE in gcc4.7
+		 * For more information look into this commits message.
+		 * trace_writeback_exec(bdi, work);
+		 */
 
 		wrote += wb_writeback(wb, work);
 
@@ -1036,7 +1039,7 @@ int bdi_writeback_thread(void *data)
 	 */
 	set_user_nice(current, 0);
 
-	trace_writeback_thread_start(bdi);
+	/* trace_writeback_thread_start(bdi); */
 
 	while (!kthread_freezable_should_stop(NULL)) {
 		/*
@@ -1047,7 +1050,7 @@ int bdi_writeback_thread(void *data)
 
 		pages_written = wb_do_writeback(wb, 0);
 
-		trace_writeback_pages_written(pages_written);
+		/* trace_writeback_pages_written(pages_written); */
 
 		if (pages_written)
 			wb->last_active = jiffies;
@@ -1074,7 +1077,7 @@ int bdi_writeback_thread(void *data)
 	if (!list_empty(&bdi->work_list))
 		wb_do_writeback(wb, 1);
 
-	trace_writeback_thread_stop(bdi);
+	/* trace_writeback_thread_stop(bdi); */
 	return 0;
 }
 
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 81ad572..e606968 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -3580,7 +3580,11 @@ void freeze_workqueues_begin(void)
 		gcwq->flags |= GCWQ_FREEZING;
 
 		list_for_each_entry(wq, &workqueues, list) {
-			struct cpu_workqueue_struct *cwq = get_cwq(cpu, wq);
+			struct cpu_workqueue_struct *cwq;
+			if (cpu < CONFIG_NR_CPUS)
+				cwq = get_cwq(cpu, wq);
+			else
+				continue;
 
 			if (cwq && wq->flags & WQ_FREEZABLE)
 				cwq->max_active = 0;
@@ -3621,7 +3625,11 @@ bool freeze_workqueues_busy(void)
 		 * to peek without lock.
 		 */
 		list_for_each_entry(wq, &workqueues, list) {
-			struct cpu_workqueue_struct *cwq = get_cwq(cpu, wq);
+			struct cpu_workqueue_struct *cwq;
+			if (cpu < CONFIG_NR_CPUS)
+				cwq = get_cwq(cpu, wq);
+			else
+				continue;
 
 			if (!cwq || !(wq->flags & WQ_FREEZABLE))
 				continue;
diff --git a/net/bluetooth/hci_conn.c b/net/bluetooth/hci_conn.c
index 44b36fe..41eff91 100644
--- a/net/bluetooth/hci_conn.c
+++ b/net/bluetooth/hci_conn.c
@@ -404,7 +404,7 @@ void hci_le_ltk_reply(struct hci_conn *conn, u8 ltk[16])
 	memset(&cp, 0, sizeof(cp));
 
 	cp.handle = cpu_to_le16(conn->handle);
-	memcpy(cp.ltk, ltk, sizeof(cp.ltk));
+	memcpy(cp.ltk, ltk, sizeof(*ltk));
 
 	hci_send_cmd(hdev, HCI_OP_LE_LTK_REPLY, sizeof(cp), &cp);
 }
diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
index 99eb909..c6a9ae9 100644
--- a/net/ipv4/tcp_input.c
+++ b/net/ipv4/tcp_input.c
@@ -4424,7 +4424,8 @@ static void tcp_sack_remove(struct tcp_sock *tp)
 
 			/* Zap this SACK, by moving forward any other SACKS. */
 			for (i=this_sack+1; i < num_sacks; i++)
-				tp->selective_acks[i-1] = tp->selective_acks[i];
+				if (i < 4)
+					tp->selective_acks[i-1] = tp->selective_acks[i];
 			num_sacks--;
 			continue;
 		}
