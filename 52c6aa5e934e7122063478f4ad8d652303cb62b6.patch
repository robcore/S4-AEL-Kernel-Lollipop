From 52c6aa5e934e7122063478f4ad8d652303cb62b6 Mon Sep 17 00:00:00 2001
From: Alucard24 <dmbaoh2@gmail.com>
Date: Thu, 19 Jun 2014 20:50:23 +0200
Subject: [PATCH] HOTPLUGS: Clean suspend max freq from HotPlugs! no longer
 needed! Thanks to @Dorimanx

---
 arch/arm/mach-msm/intelli_plug.c   |  43 -------------
 arch/arm/mach-msm/msm_hotplug.c    | 124 +++++--------------------------------
 arch/arm/mach-msm/msm_mpdecision.c |   2 +-
 3 files changed, 17 insertions(+), 152 deletions(-)

diff --git a/arch/arm/mach-msm/intelli_plug.c b/arch/arm/mach-msm/intelli_plug.c
index 406fbf9..cc38e742 100644
--- a/arch/arm/mach-msm/intelli_plug.c
+++ b/arch/arm/mach-msm/intelli_plug.c
@@ -49,20 +49,12 @@ static struct workqueue_struct *intelliplug_wq;
 
 static bool hotplug_suspended = false;
 
-struct ip_cpu_info {
-	int cpu;
-	unsigned int curr_max;
-};
-
-static DEFINE_PER_CPU(struct ip_cpu_info, ip_info);
-
 /* HotPlug Driver controls */
 static atomic_t intelli_plug_active = ATOMIC_INIT(0);
 static unsigned int wake_boost_active = 0;
 static unsigned int cpus_boosted = DEFAULT_NR_CPUS_BOOSTED;
 static unsigned int min_cpus_online = DEFAULT_MIN_CPUS_ONLINE;
 static unsigned int max_cpus_online = DEFAULT_MAX_CPUS_ONLINE;
-static unsigned int screen_off_max = UINT_MAX;
 
 /* HotPlug Driver Tuning */
 static unsigned int target_cpus = 0;
@@ -287,35 +279,6 @@ static void __ref wakeup_boost(void)
 }
 
 #if defined(CONFIG_POWERSUSPEND) || defined(CONFIG_HAS_EARLYSUSPEND)
-static void screen_off_limit(bool on)
-{
-	unsigned int i, ret;
-	struct cpufreq_policy policy;
-	struct ip_cpu_info *l_ip_info;
-
-	/* not active, so exit */
-	if (screen_off_max == UINT_MAX)
-		return;
-
-	for_each_online_cpu(i) {
-
-		l_ip_info = &per_cpu(ip_info, i);
-		ret = cpufreq_get_policy(&policy, i);
-		if (ret)
-			continue;
-
-		if (on) {
-			/* save current instance */
-			l_ip_info->curr_max = policy.max;
-			policy.max = screen_off_max;
-		} else {
-			/* restore */
-			policy.max = l_ip_info->curr_max;
-		}
-		cpufreq_update_policy(i);
-	}
-}
-
 #ifdef CONFIG_POWERSUSPEND
 static void intelli_plug_suspend(struct power_suspend *handler)
 #else
@@ -333,7 +296,6 @@ static void intelli_plug_suspend(struct early_suspend *handler)
 
 	mutex_lock(&intelli_plug_mutex);
 	hotplug_suspended = true;
-	screen_off_limit(true);
 	mutex_unlock(&intelli_plug_mutex);
 
 	/* put rest of the cores to sleep! */
@@ -357,7 +319,6 @@ static void __ref intelli_plug_resume(struct early_suspend *handler)
 
 	mutex_lock(&intelli_plug_mutex);
 	hotplug_suspended = false;
-	screen_off_limit(false);
 	mutex_unlock(&intelli_plug_mutex);
 
 	if (wake_boost_active)
@@ -574,7 +535,6 @@ show_one(debug_intelli_plug, debug_intelli_plug);
 show_one(nr_fshift, nr_fshift);
 show_one(nr_run_hysteresis, nr_run_hysteresis);
 show_one(down_lock_duration, down_lock_dur);
-show_one(screen_off_max, screen_off_max);
 
 #define store_one(file_name, object)		\
 static ssize_t store_##file_name		\
@@ -601,7 +561,6 @@ store_one(debug_intelli_plug, debug_intelli_plug);
 store_one(nr_fshift, nr_fshift);
 store_one(nr_run_hysteresis, nr_run_hysteresis);
 store_one(down_lock_duration, down_lock_dur);
-store_one(screen_off_max, screen_off_max);
 
 static ssize_t show_intelli_plug_active(struct kobject *kobj,
 					struct kobj_attribute *attr,
@@ -708,7 +667,6 @@ KERNEL_ATTR_RW(debug_intelli_plug);
 KERNEL_ATTR_RW(nr_fshift);
 KERNEL_ATTR_RW(nr_run_hysteresis);
 KERNEL_ATTR_RW(down_lock_duration);
-KERNEL_ATTR_RW(screen_off_max);
 
 static struct attribute *intelli_plug_attrs[] = {
 	&intelli_plug_active_attr.attr,
@@ -722,7 +680,6 @@ static struct attribute *intelli_plug_attrs[] = {
 	&nr_fshift_attr.attr,
 	&nr_run_hysteresis_attr.attr,
 	&down_lock_duration_attr.attr,
-	&screen_off_max_attr.attr,
 	NULL,
 };
 
diff --git a/arch/arm/mach-msm/msm_hotplug.c b/arch/arm/mach-msm/msm_hotplug.c
index 4fa7c8d..2d72c7f 100644
--- a/arch/arm/mach-msm/msm_hotplug.c
+++ b/arch/arm/mach-msm/msm_hotplug.c
@@ -49,6 +49,10 @@
 #define DEFAULT_FAST_LANE_MIN_FREQ 1350000
 #define DEFAULT_SUSPEND_DEFER_TIME	5
 
+/*
+ * debug = 1 will print all
+ * debug = 2 will print suspend/resume only
+ */
 static unsigned int debug = 0;
 module_param_named(debug_mask, debug, uint, 0644);
 
@@ -64,8 +68,6 @@ static struct cpu_hotplug {
 	defined(CONFIG_POWERSUSPEND) || \
 	defined(CONFIG_HAS_EARLYSUSPEND)
 	unsigned int suspended;
-	unsigned int suspend_max_freq;
-	unsigned int suspend_max_cpus;
 	unsigned int suspend_defer_time;
 #endif
 	unsigned int target_cpus;
@@ -74,7 +76,7 @@ static struct cpu_hotplug {
 	unsigned int cpus_boosted;
 	unsigned int offline_load;
 	unsigned int down_lock_dur;
-	unsigned int fast_lane_min_freq;
+	uint32_t fast_lane_min_freq;
 	u64 boost_lock_dur;
 	u64 last_input;
 	unsigned int fast_lane_load;
@@ -526,8 +528,9 @@ static void msm_hotplug_work(struct work_struct *work)
 	}
 
 reschedule:
-	dprintk("%s: cur_avg_load: %3u online_cpus: %u target: %u\n", MSM_HOTPLUG,
-		stats.cur_avg_load, stats.online_cpus, target);
+	if (debug == 1)
+		dprintk("%s: cur_avg_load: %3u online_cpus: %u target: %u\n", MSM_HOTPLUG,
+			stats.cur_avg_load, stats.online_cpus, target);
 	reschedule_hotplug_work();
 }
 
@@ -536,32 +539,14 @@ static void msm_hotplug_work(struct work_struct *work)
 	defined(CONFIG_HAS_EARLYSUSPEND)
 static void msm_hotplug_suspend(struct work_struct *work)
 {
-	int ret;
 	unsigned int cpu, max_freq = 0;
-	struct cpufreq_policy policy;
 
 	if (!hotplug.msm_enabled)
 		return;
 
-	for_each_possible_cpu(cpu) {
-		ret = cpufreq_get_policy(&policy, cpu);
-		if (ret)
-			continue;
-		if (!cpu)
-			max_freq = policy.max;
-		cpufreq_verify_within_limits(&policy, policy.min,
-					     hotplug.suspend_max_freq);
-		if (hotplug.suspend_max_cpus == num_online_cpus())
-			break;
-		if (cpu && cpu_online(cpu))
-			cpu_down(cpu);
-	}
-
-	if (hotplug.suspend_max_cpus == 1) {
-		/* Flush hotplug workqueue */
-		flush_workqueue(hotplug_wq);
-		cancel_delayed_work_sync(&hotplug_work);
-	}
+	/* Flush hotplug workqueue */
+	flush_workqueue(hotplug_wq);
+	cancel_delayed_work_sync(&hotplug_work);
 
 	mutex_lock(&hotplug.msm_hotplug_mutex);
 	hotplug.suspended = 1;
@@ -573,31 +558,16 @@ static void msm_hotplug_suspend(struct work_struct *work)
 			continue;
 		cpu_down(cpu);
 	}
-	dprintk("%s: Suspending %u cpus max to %uMHz\n", MSM_HOTPLUG,
-		hotplug.suspend_max_cpus > 0 ?
-		hotplug.suspend_max_cpus : stats.total_cpus,
-		(hotplug.suspend_max_freq > 0 ?
-		hotplug.suspend_max_freq : max_freq) / 1000);
 }
 
 static void __ref msm_hotplug_resume(struct work_struct *work)
 {
-	int ret, required_reschedule = 0;
-	unsigned int cpu, max_freq = 0;
-	struct cpufreq_policy policy;
+	int required_reschedule = 0;
+	unsigned int cpu;
 
 	if (!hotplug.msm_enabled)
 		return;
 
-	for_each_possible_cpu(cpu) {
-		ret = cpufreq_get_policy(&policy, cpu);
-		if (ret)
-			continue;
-		cpufreq_verify_within_cpu_limits(&policy);
-		if (!cpu)
-			max_freq = policy.max;
-	}
-
 	if (hotplug.suspended) {
 		mutex_lock(&hotplug.msm_hotplug_mutex);
 		required_reschedule = 1;
@@ -618,8 +588,6 @@ static void __ref msm_hotplug_resume(struct work_struct *work)
 	/* Resume hotplug workqueue if required */
 	if (required_reschedule)
 		reschedule_hotplug_work();
-
-	dprintk("%s: Resuming cpus to %uMHz\n", MSM_HOTPLUG, max_freq / 1000);
 }
 
 #ifdef CONFIG_LCD_NOTIFY
@@ -704,8 +672,9 @@ static void hotplug_input_event(struct input_handle *handle, unsigned int type,
 		hotplug.cpus_boosted <= hotplug.min_cpus_online)
 		return;
 
-	dprintk("%s: online_cpus: %u boosted\n", MSM_HOTPLUG,
-		stats.online_cpus);
+	if (debug == 1)
+		dprintk("%s: online_cpus: %u boosted\n", MSM_HOTPLUG,
+				stats.online_cpus);
 
 	online_cpu(hotplug.cpus_boosted);
 	last_boost_time = ktime_to_us(ktime_get());
@@ -1199,61 +1168,6 @@ static ssize_t store_max_cpus_online(struct device *dev,
 #if defined(CONFIG_LCD_NOTIFY) || \
 	defined(CONFIG_POWERSUSPEND) || \
 	defined(CONFIG_HAS_EARLYSUSPEND)
-static ssize_t show_suspend_max_freq(struct device *dev,
-				     struct device_attribute *msm_hotplug_attrs,
-				     char *buf)
-{
-	return sprintf(buf, "%u\n", hotplug.suspend_max_freq);
-}
-
-static ssize_t store_suspend_max_freq(struct device *dev,
-				      struct device_attribute *msm_hotplug_attrs,
-				      const char *buf, size_t count)
-{
-	int ret;
-	unsigned int val;
-	struct cpufreq_policy *policy = cpufreq_cpu_get(0);
-
-	ret = sscanf(buf, "%u", &val);
-	if (ret != 1)
-		return -EINVAL;
-
-	if (val == 0)
-		goto out;
-
-	if (val < policy->min)
-		val = policy->min;
-	else if (val > policy->max)
-		val = policy->max;
-out:
-	hotplug.suspend_max_freq = val;
-
-	return count;
-}
-
-static ssize_t show_suspend_max_cpus(struct device *dev,
-				     struct device_attribute *msm_hotplug_attrs,
-				     char *buf)
-{
-	return sprintf(buf, "%u\n", hotplug.suspend_max_cpus);
-}
-
-static ssize_t store_suspend_max_cpus(struct device *dev,
-				      struct device_attribute *msm_hotplug_attrs,
-				      const char *buf, size_t count)
-{
-	int ret;
-	unsigned int val;
-
-	ret = sscanf(buf, "%u", &val);
-	if (ret != 1 || val < 0 || val > stats.total_cpus)
-		return -EINVAL;
-
-	hotplug.suspend_max_cpus = val;
-
-	return count;
-}
-
 static ssize_t store_suspend_defer_time(struct device *dev,
 				    struct device_attribute *msm_hotplug_attrs,
 				    const char *buf, size_t count)
@@ -1415,10 +1329,6 @@ static DEVICE_ATTR(max_cpus_online, 644, show_max_cpus_online,
 #if defined(CONFIG_LCD_NOTIFY) || \
 	defined(CONFIG_POWERSUSPEND) || \
 	defined(CONFIG_HAS_EARLYSUSPEND)
-static DEVICE_ATTR(suspend_max_freq, 644, show_suspend_max_freq,
-		   store_suspend_max_freq);
-static DEVICE_ATTR(suspend_max_cpus, 644, show_suspend_max_cpus,
-		   store_suspend_max_cpus);
 static DEVICE_ATTR(suspend_defer_time, 644, show_suspend_defer_time,
                    store_suspend_defer_time);
 #endif
@@ -1443,8 +1353,6 @@ static struct attribute *msm_hotplug_attrs[] = {
 #if defined(CONFIG_LCD_NOTIFY) || \
 	defined(CONFIG_POWERSUSPEND) || \
 	defined(CONFIG_HAS_EARLYSUSPEND)
-	&dev_attr_suspend_max_freq.attr,
-	&dev_attr_suspend_max_cpus.attr,
 	&dev_attr_suspend_defer_time.attr,
 #endif
 	&dev_attr_cpus_boosted.attr,
diff --git a/arch/arm/mach-msm/msm_mpdecision.c b/arch/arm/mach-msm/msm_mpdecision.c
index 52b9ec3..746bbe8 100644
--- a/arch/arm/mach-msm/msm_mpdecision.c
+++ b/arch/arm/mach-msm/msm_mpdecision.c
@@ -362,6 +362,7 @@ static int __cpuinit msm_mpd_do_hotplug(void *data)
 	int cpu;
 
 	while (1) {
+		msm_dcvs_update_algo_params();
 		wait_event(msm_mpd.wait_hpq, *event || kthread_should_stop());
 		if (kthread_should_stop())
 			break;
@@ -394,7 +395,6 @@ static int __cpuinit msm_mpd_do_hotplug(void *data)
 				}
 		msm_mpd.hpupdate = HPUPDATE_WAITING;
 		msm_dcvs_apply_gpu_floor(0);
-		msm_dcvs_update_algo_params();
 	}
 
 	return 0;
