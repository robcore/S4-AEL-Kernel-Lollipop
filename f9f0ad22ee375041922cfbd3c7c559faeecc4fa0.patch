From f9f0ad22ee375041922cfbd3c7c559faeecc4fa0 Mon Sep 17 00:00:00 2001
From: cyanogen <shade@chemlab.org>
Date: Wed, 30 Jul 2014 19:26:25 -0500
Subject: [PATCH] Fix compilation issues with CONFIG_SEC_DEBUG disabled.

Change-Id: I3ad7ba20b58f3030f291e540020a5c3749c4a42b
---
 arch/arm/kernel/smp.c                      |  4 ++--
 arch/arm/mach-msm/include/mach/sec_debug.h |  2 +-
 arch/arm/mach-msm/msm_rtb.c                |  4 ++++
 arch/arm/mach-msm/msm_watchdog.c           |  8 ++++----
 arch/arm/mach-msm/pm-8x60.c                |  2 +-
 arch/arm/mach-msm/restart.c                |  2 +-
 drivers/input/keyboard/gpio_keys.c         |  6 ++++--
 drivers/input/misc/pmic8xxx-pwrkey.c       |  6 +++---
 drivers/mfd/max77693.c                     | 11 ++++++++++-
 drivers/misc/sec_misc.c                    |  5 +++++
 kernel/sched/core.c                        |  6 +++---
 kernel/workqueue.c                         |  4 ++--
 12 files changed, 40 insertions(+), 20 deletions(-)

diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c
index b7d81ac..c649a2c 100644
--- a/arch/arm/kernel/smp.c
+++ b/arch/arm/kernel/smp.c
@@ -44,7 +44,7 @@
 #include <asm/smp_plat.h>
 #include <asm/mach/arch.h>
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
 #endif
 /*
@@ -573,7 +573,7 @@ static void ipi_cpu_stop(unsigned int cpu, struct pt_regs *regs)
 		raw_spin_lock(&stop_lock);
 		printk(KERN_CRIT "CPU%u: stopping\n", cpu);
 		dump_stack();
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 		sec_debug_dump_stack();
 #endif
 		raw_spin_unlock(&stop_lock);
diff --git a/arch/arm/mach-msm/include/mach/sec_debug.h b/arch/arm/mach-msm/include/mach/sec_debug.h
index 4116511..69fca81 100644
--- a/arch/arm/mach-msm/include/mach/sec_debug.h
+++ b/arch/arm/mach-msm/include/mach/sec_debug.h
@@ -29,7 +29,7 @@
 
 extern void *restart_reason;
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 extern int sec_debug_init(void);
 extern int sec_debug_dump_stack(void);
 extern void sec_debug_hw_reset(void);
diff --git a/arch/arm/mach-msm/msm_rtb.c b/arch/arm/mach-msm/msm_rtb.c
index 4d8923d..7122d27 100644
--- a/arch/arm/mach-msm/msm_rtb.c
+++ b/arch/arm/mach-msm/msm_rtb.c
@@ -287,9 +287,13 @@ int msm_rtb_probe(struct platform_device *pdev)
 	atomic_set(&msm_rtb_idx, 0);
 	msm_rtb.step_size = 1;
 #endif
+#ifdef CONFIG_SEC_DEBUG
 	if (kernel_sec_get_debug_level() != KERNEL_SEC_DEBUG_LEVEL_LOW) {
+#endif
 		msm_rtb.filter = 1 << LOGK_READL | 1 << LOGK_WRITEL;
+#ifdef CONFIG_SEC_DEBUG
 	}
+#endif
 	atomic_notifier_chain_register(&panic_notifier_list,
 						&msm_rtb_panic_blk);
 	msm_rtb.initialized = 1;
diff --git a/arch/arm/mach-msm/msm_watchdog.c b/arch/arm/mach-msm/msm_watchdog.c
index d4ca859..5c4f016 100644
--- a/arch/arm/mach-msm/msm_watchdog.c
+++ b/arch/arm/mach-msm/msm_watchdog.c
@@ -91,7 +91,7 @@ module_param_call(runtime_disable, wdog_enable_set, param_get_int,
 static int appsbark;
 module_param(appsbark, int, 0);
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 static unsigned int regsave_vaddr;
 static unsigned int regsave_paddr;
 #endif
@@ -250,7 +250,7 @@ static int wdog_enable_set(const char *val, struct kernel_param *kp)
 	return ret;
 }
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 static unsigned long long last_emerg_pet;
 void emerg_pet_watchdog(void)
 {
@@ -328,7 +328,7 @@ static irqreturn_t wdog_bark_handler(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 unsigned int get_wdog_regsave_paddr(void)
 {
 	return __pa(&regsave_paddr);
@@ -350,7 +350,7 @@ static void configure_bark_dump(void)
 
 	if (!appsbark) {
 		scm_regsave = (void *)__get_free_page(GFP_KERNEL);
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 		printk(KERN_INFO "WDOG handled by TZ:dump @0x%08x PA:%08x\n",
 				(unsigned int) scm_regsave,
 				(unsigned int) __pa(scm_regsave));
diff --git a/arch/arm/mach-msm/pm-8x60.c b/arch/arm/mach-msm/pm-8x60.c
index 2f3fdcb..0f221ac 100644
--- a/arch/arm/mach-msm/pm-8x60.c
+++ b/arch/arm/mach-msm/pm-8x60.c
@@ -60,7 +60,7 @@
 #include "pm-boot.h"
 #include <mach/event_timer.h>
 #include <linux/cpu_pm.h>
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
 #endif
 #include <linux/regulator/consumer.h>
diff --git a/arch/arm/mach-msm/restart.c b/arch/arm/mach-msm/restart.c
index c1beeae..f8107e1 100644
--- a/arch/arm/mach-msm/restart.c
+++ b/arch/arm/mach-msm/restart.c
@@ -404,7 +404,7 @@ static int __init msm_pmic_restart_init(void)
 
 #if defined(CONFIG_MACH_JF_VZW) || defined(CONFIG_MACH_MELIUS)
 	return 0;
-#else
+#elif defined(CONFIG_SEC_DEBUG)
 	if (kernel_sec_get_debug_level() != KERNEL_SEC_DEBUG_LEVEL_LOW)
 		return 0;
 #endif
diff --git a/drivers/input/keyboard/gpio_keys.c b/drivers/input/keyboard/gpio_keys.c
index 4f2ca63..eac3b67 100644
--- a/drivers/input/keyboard/gpio_keys.c
+++ b/drivers/input/keyboard/gpio_keys.c
@@ -29,8 +29,10 @@
 #include <linux/of_platform.h>
 #include <linux/of_gpio.h>
 #include <linux/spinlock.h>
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
+#else
+#include <linux/sec_class.h>
 #endif
 #ifdef CONFIG_MACH_JF
 #include <linux/i2c/synaptics_rmi.h>
@@ -423,7 +425,7 @@ static void gpio_keys_gpio_report_event(struct gpio_button_data *bdata)
 	unsigned int type = button->type ?: EV_KEY;
 	int state = (gpio_get_value_cansleep(button->gpio) ? 1 : 0) ^ button->active_low;
 
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 	sec_debug_check_crash_key(button->code, state);
 #endif
 
diff --git a/drivers/input/misc/pmic8xxx-pwrkey.c b/drivers/input/misc/pmic8xxx-pwrkey.c
index 7eb36e7..75f6f2e 100644
--- a/drivers/input/misc/pmic8xxx-pwrkey.c
+++ b/drivers/input/misc/pmic8xxx-pwrkey.c
@@ -22,7 +22,7 @@
 
 #include <linux/mfd/pm8xxx/core.h>
 #include <linux/input/pmic8xxx-pwrkey.h>
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
 #endif
 #include <linux/string.h>
@@ -59,7 +59,7 @@ static irqreturn_t pwrkey_press_irq(int irq, void *_pwrkey)
 	pwrkey->powerkey_state = 1;
 	input_report_key(pwrkey->pwr, KEY_POWER, 1);
 	input_sync(pwrkey->pwr);
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 	sec_debug_check_crash_key(KEY_POWER, 1);
 #endif
 	return IRQ_HANDLED;
@@ -80,7 +80,7 @@ static irqreturn_t pwrkey_release_irq(int irq, void *_pwrkey)
 	pwrkey->powerkey_state = 0;
 	input_report_key(pwrkey->pwr, KEY_POWER, 0);
 	input_sync(pwrkey->pwr);
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 	sec_debug_check_crash_key(KEY_POWER, 0);
 #endif
 	return IRQ_HANDLED;
diff --git a/drivers/mfd/max77693.c b/drivers/mfd/max77693.c
index 5e06a44..f27c845 100644
--- a/drivers/mfd/max77693.c
+++ b/drivers/mfd/max77693.c
@@ -30,8 +30,9 @@
 #include <linux/mfd/max77693.h>
 #include <linux/mfd/max77693-private.h>
 #include <linux/regulator/machine.h>
-
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
+#endif
 #include <linux/mfd/pm8xxx/misc.h>
 
 #define I2C_ADDR_PMIC	(0xCC >> 1)	/* Charger, Flash LED */
@@ -168,21 +169,29 @@ static int max77693_i2c_probe(struct i2c_client *i2c,
 	}
 #if 0
 #if defined(CONFIG_MACH_JF_VZW) || defined(CONFIG_MACH_JF_LGT)
+#ifdef CONFIG_SEC_DEBUG
 	if (kernel_sec_get_debug_level() == KERNEL_SEC_DEBUG_LEVEL_LOW) {
+#endif
 		pm8xxx_hard_reset_config(PM8XXX_DISABLE_HARD_RESET);
 		max77693_write_reg(i2c, MAX77693_PMIC_REG_MAINCTRL1, 0x04);
+#ifdef CONFIG_SEC_DEBUG
 	} else {
 		pm8xxx_hard_reset_config(PM8XXX_DISABLE_HARD_RESET);
 		max77693_write_reg(i2c, MAX77693_PMIC_REG_MAINCTRL1, 0x0c);
 	}
+#endif
 #else
+#ifdef CONFIG_SEC_DEBUG
 	if (kernel_sec_get_debug_level() == KERNEL_SEC_DEBUG_LEVEL_LOW) {
+#endif
 		max77693_write_reg(i2c, MAX77693_PMIC_REG_MAINCTRL1, 0x04);
+#ifdef CONFIG_SEC_DEBUG
 	} else {
 		pm8xxx_hard_reset_config(PM8XXX_DISABLE_HARD_RESET);
 		max77693_write_reg(i2c, MAX77693_PMIC_REG_MAINCTRL1, 0x0c);
 	}
 #endif
+#endif
 
 #endif
 	max77693_update_reg(i2c, MAX77693_CHG_REG_SAFEOUT_CTRL, 0x00, 0x30);
diff --git a/drivers/misc/sec_misc.c b/drivers/misc/sec_misc.c
index 591b7f4..63e3f1f 100644
--- a/drivers/misc/sec_misc.c
+++ b/drivers/misc/sec_misc.c
@@ -33,6 +33,7 @@
 #include <mach/gpio.h>
 #include <linux/sec_param.h>
 #include <mach/sec_debug.h>
+#include <linux/sec_class.h>
 #define MOVINAND_CHECKSUM
 #define RORY_CONTROL
 
@@ -132,6 +133,7 @@ static DEVICE_ATTR(rory_control, S_IRUGO | S_IWUSR ,
 		rory_control_show, rory_control_store);
 #endif /*RORY_CONTROL*/
 
+#ifdef CONFIG_SEC_DEBUG
 static unsigned int convert_debug_level_str(const char *str)
 {
 	if (strncasecmp(str, "0xA0A0", 6) == 0)
@@ -190,6 +192,7 @@ static ssize_t debug_level_store(struct device *dev,
 
 static DEVICE_ATTR(debug_level, S_IRUGO | S_IWUSR ,
 		debug_level_show, debug_level_store);
+#endif
 
 #if defined(CONFIG_MACH_APEXQ) || defined(CONFIG_MACH_AEGIS2)
 static ssize_t slideCount_show
@@ -223,7 +226,9 @@ static struct device_attribute *sec_misc_attrs[] = {
 	&dev_attr_emmc_checksum_done,
 	&dev_attr_emmc_checksum_pass,
 	&dev_attr_rory_control,
+#ifdef CONFIG_SEC_DEBUG
 	&dev_attr_debug_level,
+#endif
 #if defined(CONFIG_MACH_APEXQ) || defined(CONFIG_MACH_AEGIS2)
 	&dev_attr_slideCount,
 #endif
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 3e236d3..97384bb 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -80,7 +80,7 @@
 #ifdef CONFIG_PARAVIRT
 #include <asm/paravirt.h>
 #endif
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
 #endif
 #include "sched.h"
@@ -3281,7 +3281,7 @@ static void __sched __schedule(void)
 		 */
 		cpu = smp_processor_id();
 		rq = cpu_rq(cpu);
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 		sec_debug_task_sched_log(cpu, rq->curr);
 #endif
 	} else
@@ -6988,7 +6988,7 @@ void __init sched_init(void)
 {
 	int i, j;
 	unsigned long alloc_size = 0, ptr;
-#if !defined(CONFIG_MACH_MELIUS)
+#ifdef CONFIG_SEC_DEBUG
     sec_gaf_supply_rqinfo(offsetof(struct rq, curr),
                           offsetof(struct cfs_rq, rq));
 #endif
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 39ba08e..4bd933a 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -44,7 +44,7 @@
 #include <linux/bug.h>
 
 #include "workqueue_sched.h"
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 #include <mach/sec_debug.h>
 #endif
 
@@ -1870,7 +1870,7 @@ __acquires(&gcwq->lock)
 	lock_map_acquire_read(&cwq->wq->lockdep_map);
 	lock_map_acquire(&lockdep_map);
 	trace_workqueue_execute_start(work);
-#if defined(CONFIG_SEC_DEBUG)
+#ifdef CONFIG_SEC_DEBUG
 	secdbg_sched_msg("@%pS", f);
 #endif
 	f(work);
