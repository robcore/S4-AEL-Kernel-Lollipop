From 3a85fd17cad5f0c2a24f9e78786b0903babcbd31 Mon Sep 17 00:00:00 2001
From: Se Hun Kim <sean2.kim@lge.com>
Date: Sun, 5 May 2013 15:33:46 -0700
Subject: [PATCH] msm: mdss: Adding lcd notifier

Supports notifier for start&end of LCD power on&off

Change-Id: Idaa685a2c554286da5f764519305d830c4d1a1bd
Signed-off-by: Se Hun Kim <sean2.kim@lge.com>
Signed-off-by: Jongrak Kwon <jongrak.kwon@lge.com>
Signed-off-by: Devin Kim <dojip.kim@lge.com>
---
 drivers/video/msm/mdss/Makefile     |  1 +
 drivers/video/msm/mdss/lcd_notify.c | 52 +++++++++++++++++++++++++++++++++++++
 drivers/video/msm/mdss/mdss_dsi.c   |  5 ++++
 include/linux/lcd_notify.h          | 37 ++++++++++++++++++++++++++
 4 files changed, 95 insertions(+)
 create mode 100644 drivers/video/msm/mdss/lcd_notify.c
 create mode 100644 include/linux/lcd_notify.h

diff --git a/drivers/video/msm/mdss/Makefile b/drivers/video/msm/mdss/Makefile
index 2c58e49..c52b329 100644
--- a/drivers/video/msm/mdss/Makefile
+++ b/drivers/video/msm/mdss/Makefile
@@ -39,3 +39,4 @@ obj-$(CONFIG_FB_MSM_QPIC) += mdss-qpic.o
 obj-$(CONFIG_FB_MSM_QPIC_ILI_QVGA_PANEL) += qpic_panel_ili_qvga.o
 
 obj-$(CONFIG_FB_MSM_MDSS) += mdss_fb.o
+obj-$(CONFIG_FB_MSM_MDSS) += lcd_notify.o
diff --git a/drivers/video/msm/mdss/lcd_notify.c b/drivers/video/msm/mdss/lcd_notify.c
new file mode 100644
index 0000000..3b5a96c
--- /dev/null
+++ b/drivers/video/msm/mdss/lcd_notify.c
@@ -0,0 +1,52 @@
+/*
+ * drivers/video/msm/mdss/lcd_notify.c
+ *
+ * Copyright (C) 2013 LGE Inc
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/lcd_notify.h>
+#include <linux/notifier.h>
+#include <linux/export.h>
+
+static BLOCKING_NOTIFIER_HEAD(lcd_notifier_list);
+
+/**
+ *	lcd_register_client - register a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_register_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_register(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_register_client);
+
+/**
+ *	lcd_unregister_client - unregister a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_unregister_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_unregister(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_unregister_client);
+
+/**
+ *	lcd_notifier_call_chain - notify clients on lcd_events
+ *	@val: Value passed unmodified to notifier function
+ *	@v: pointer passed unmodified to notifier function
+ *
+ */
+int lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return blocking_notifier_call_chain(&lcd_notifier_list, val, v);
+}
+EXPORT_SYMBOL_GPL(lcd_notifier_call_chain);
diff --git a/drivers/video/msm/mdss/mdss_dsi.c b/drivers/video/msm/mdss/mdss_dsi.c
index 3a8c5d0..6f7e669 100644
--- a/drivers/video/msm/mdss/mdss_dsi.c
+++ b/drivers/video/msm/mdss/mdss_dsi.c
@@ -21,6 +21,7 @@
 #include <linux/gpio.h>
 #include <linux/err.h>
 #include <linux/regulator/consumer.h>
+#include <linux/lcd_notify.h>
 
 #include "mdss.h"
 #include "mdss_panel.h"
@@ -678,6 +679,7 @@ static int mdss_dsi_event_handler(struct mdss_panel_data *pdata,
 
 	switch (event) {
 	case MDSS_EVENT_UNBLANK:
+		lcd_notifier_call_chain(LCD_EVENT_ON_START, NULL);
 		rc = mdss_dsi_on(pdata);
 		if (ctrl_pdata->on_cmds->ctrl_state == DSI_LP_MODE) {
 			rc = mdss_dsi_unblank(pdata);
@@ -686,8 +688,10 @@ static int mdss_dsi_event_handler(struct mdss_panel_data *pdata,
 	case MDSS_EVENT_PANEL_ON:
 		if (ctrl_pdata->on_cmds->ctrl_state == DSI_HS_MODE)
 			rc = mdss_dsi_unblank(pdata);
+		lcd_notifier_call_chain(LCD_EVENT_ON_END, NULL);
 		break;
 	case MDSS_EVENT_BLANK:
+		lcd_notifier_call_chain(LCD_EVENT_OFF_START, NULL);
 		if (ctrl_pdata->off_cmds->ctrl_state == DSI_HS_MODE) {
 			rc = mdss_dsi_blank(pdata);
 		}
@@ -697,6 +701,7 @@ static int mdss_dsi_event_handler(struct mdss_panel_data *pdata,
 			rc = mdss_dsi_blank(pdata);
 		}
 		rc = mdss_dsi_off(pdata);
+		lcd_notifier_call_chain(LCD_EVENT_OFF_END, NULL);
 		break;
 	case MDSS_EVENT_CONT_SPLASH_FINISH:
 		if (ctrl_pdata->on_cmds->ctrl_state == DSI_LP_MODE) {
diff --git a/include/linux/lcd_notify.h b/include/linux/lcd_notify.h
new file mode 100644
index 0000000..11aad12
--- /dev/null
+++ b/include/linux/lcd_notify.h
@@ -0,0 +1,37 @@
+#ifndef __LINUX_LCD_NOTIFY_H
+#define __LINUX_LCD_NOTIFY_H
+
+#include <linux/notifier.h>
+
+/* the display on process started */
+#define LCD_EVENT_ON_START		0x01
+/* the display on process end */
+#define LCD_EVENT_ON_END		0x02
+/* the display off process started */
+#define LCD_EVENT_OFF_START		0x03
+/* the display off process end */
+#define LCD_EVENT_OFF_END		0x04
+
+struct lcd_event {
+	void *data;
+};
+
+#ifdef CONFIG_FB_MSM_MDSS
+int lcd_register_client(struct notifier_block *nb);
+int lcd_unregister_client(struct notifier_block *nb);
+int lcd_notifier_call_chain(unsigned long val, void *v);
+#else
+static int inline lcd_register_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_unregister_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return -ENOENT;
+}
+#endif
+#endif /* _LINUX_LCD_NOTIFY_H */
