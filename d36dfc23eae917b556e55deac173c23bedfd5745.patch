From d36dfc23eae917b556e55deac173c23bedfd5745 Mon Sep 17 00:00:00 2001
From: DooMLoRD <metoo.mememe@gmail.com>
Date: Sat, 8 Mar 2014 02:27:39 +0530
Subject: [PATCH] fixes to msm_thermal

---
 drivers/thermal/msm_thermal.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/thermal/msm_thermal.c b/drivers/thermal/msm_thermal.c
index e5f7eb2..398b65b 100644
--- a/drivers/thermal/msm_thermal.c
+++ b/drivers/thermal/msm_thermal.c
@@ -77,10 +77,10 @@ static int update_cpu_max_freq(int cpu, uint32_t max_freq)
 		return ret;
 
 	limited_max_freq = max_freq;
-	if (max_freq != MSM_CPUFREQ_NO_LIMIT)
+	if (max_freq != MSM_CPUFREQ_NO_LIMIT) {
 		pr_info("%s: Limiting cpu%d max frequency to %d\n",
 				KBUILD_MODNAME, cpu, max_freq);
-	else {
+	} else {
 		pr_info("%s: Max frequency reset for cpu%d\n",
 				KBUILD_MODNAME, cpu);
 		throttling = false;
@@ -179,11 +179,12 @@ static void __cpuinit check_temp(struct work_struct *work)
 
 	do_core_control(temp);
 
-	if (temp >= msm_thermal_info.limit_temp_degC) {
+	if (temp >= temp_threshold) {
 		if (!throttling) {
 			max_frequency = policy->max;
 			throttling = true;
 		}
+
 		if (limit_idx == limit_idx_low)
 			goto reschedule;
 
@@ -197,6 +198,7 @@ static void __cpuinit check_temp(struct work_struct *work)
 
 		limit_idx = limit_idx_high;
 		max_freq = max_frequency;
+
 	}
 	if (max_freq == limited_max_freq)
 		goto reschedule;
